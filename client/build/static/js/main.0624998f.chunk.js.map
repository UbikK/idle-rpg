{"version":3,"sources":["services/AuthService.ts","components/Navigation.tsx","services/ApiService.ts","components/CharacterSheet.tsx","components/Arena.tsx","components/CharacterEditor.tsx","components/CharacterSelect.tsx","components/Signin.tsx","components/Signup.tsx","components/Router.tsx","services/Utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["authContext","createContext","undefined","useAuth","useContext","authentication","isAuthenticated","signin","cb","signout","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","link","textDecoration","color","Navigation","classes","history","useHistory","auth","AppBar","position","Toolbar","Typography","variant","className","to","token","Button","onClick","push","executeFight","playerId","opponentId","a","body","fetch","method","JSON","stringify","headers","json","fightResult","CharacterSheet","props","character","Card","CardContent","Grid","container","justify","alignContent","alignItems","direction","name","rank","health","attack","defense","magik","getFightQuery","gql","Arena","charId","console","log","useState","useLazyQuery","fetchPolicy","variables","getFight","fightData","data","fightSetting","opponent","player","setPlayer","setOpponent","combatReport","setCombatReport","winner","setWinner","startFight","setStartFight","endFight","setEndFight","useEffect","reportList","getCombatReport","id","Container","style","padding","item","xs","disabled","goBack","margin","map","reportLine","Paper","roundNumber","attackValue","enemy","healthLost","indexOf","form","width","marginTop","editCharacterMutation","CharacterEditor","open","setOpen","skillpoints","useMutation","editCharacter","setName","setSkillpoints","setHealth","setAttack","setDefense","setMagik","handleClose","getAttrValue","attr","value","handler","error","handleAddPoint","attributeName","attribute","cost","Math","ceil","handleRemovePoint","refund","handleDisabled","action","handleChange","event","target","Dialog","onClose","CssBaseline","DialogTitle","onSubmit","preventDefault","char","userId","DialogContent","TextField","label","required","onChange","RemoveCircle","AddCircle","DialogActions","type","create","empty","height","chargrid","charLabel","textAlign","cursor","backgroundColor","characterListQuery","characterFights","CharacterSelect","charList","setCharList","setCharacter","fightHistory","setFightHistory","setUserId","refresh","setRefresh","openEditor","setOpenEditor","displayHisto","setDisplayHisto","decodedToken","useJwt","getChars","loading","characterList","getFightHistory","fights","errorFights","isAvailable","now","DateTime","lastFight","fromMillis","parseInt","diff","hours","characters","fightsForCharacter","creationOK","length","CreateCharacterButton","c","find","handleSelect","md","hidden","f","date","toLocaleString","DATETIME_MED","paper","display","flexDirection","submit","loginMutation","SignIn","username","setUsername","pwd","setPwd","login","location","useLocation","from","state","pathname","handleSubmit","user","loginData","replace","component","maxWidth","fullWidth","message","signupMutation","SignUp","firstname","setFirstname","lastname","setLastname","signup","pwdConfirm","userData","autoComplete","Router","query","URLSearchParams","search","exact","path","Home","PrivateRoute","get","children","rest","render","ProvideAuth","sessionStorage","getItem","setToken","setItem","removeItem","useProvideAuth","Provider","App","client","ApolloClient","uri","cache","InMemoryCache","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0624998f.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const authContext = createContext<AuthContext | undefined>(undefined);\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nconst authentication = {\r\n  isAuthenticated: false,\r\n  signin(cb: Function) {\r\n    authentication.isAuthenticated = true;\r\n    cb();\r\n  },\r\n  signout(cb: Function) {\r\n    authentication.isAuthenticated = false;\r\n    cb();\r\n  }\r\n};\r\n\r\n\r\n\r\nexport function useProvideAuth() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n  };\r\n\r\n  const [token, setToken] = useState<string | null>(getToken());\r\n\r\n  const signin = (token: string, cb: Function) => {\r\n    console.log(token)\r\n    if(token){\r\n      \r\n      \r\n      return authentication.signin(() => {\r\n        sessionStorage.setItem('token', token as string);\r\n        setToken(token);\r\n        cb();\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const signout = (cb: Function) => {\r\n    //sessionStorage.removeItem('token');\r\n    return authentication.signout(() => {\r\n      sessionStorage.removeItem('token')\r\n      setToken(null);\r\n      cb();\r\n    });\r\n  };\r\n\r\n  return {\r\n    token,\r\n    signin,\r\n    signout\r\n  };\r\n}\r\n\r\ntype AuthContext = {\r\n  token: string | null,\r\n    signin: Function,\r\n    signout: Function\r\n}\r\n\r\n/* export default function useToken() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n    \r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken: string) => {\r\n    sessionStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n  };\r\n\r\n  const removeToken = () => {\r\n    sessionStorage.removeItem('token');\r\n    setToken(null)\r\n  }\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    removeToken: removeToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n}\r\n\r\nexport interface tokenInterface {\r\n  setToken: any,\r\n    removeToken: any,\r\n    getToken: any,\r\n    token: any\r\n} */","import { AppBar, Toolbar, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../services/AuthService\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    }\r\n  }));\r\nexport default function Navigation(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    return (\r\n    <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/\" className={classes.link}>Mon petit RPG</Link>\r\n      </Typography>\r\n      {\r\n        auth?.token?\r\n            <Button color=\"inherit\" onClick={() => auth.signout(() => history.push(\"/\"))}>Me deconnecter</Button>\r\n            : \r\n            <Button color=\"inherit\"><Link to=\"/character-select\" className={classes.link}>Me connecter</Link></Button>}\r\n    </Toolbar>\r\n  </AppBar>\r\n  )\r\n}","export async function executeFight(playerId: string, opponentId: string) {\r\n    const body = {\r\n        playerId: playerId,\r\n        opponentId: opponentId\r\n    }\r\n    const fightResult = await (await fetch('api/fight', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {'Content-Type': 'application/json'}\r\n    })).json();\r\n\r\n    return fightResult\r\n}","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function CharacterSheet(props: any){\r\n    \r\n    if(!props.character){\r\n        return (\r\n            <></>\r\n        )\r\n    } else {\r\n        return(\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" direction=\"column\">\r\n                        <Typography variant=\"h5\">{props.character?.name}</Typography>\r\n                        <Typography variant=\"h6\">Niveau: {props.character?.rank}</Typography>\r\n                        <Typography variant=\"h6\">Endurance: {props.character?.health}</Typography>\r\n                        <Typography variant=\"h6\">Attaque: {props.character?.attack}</Typography>\r\n                        <Typography variant=\"h6\">Défense: {props.character?.defense}</Typography>\r\n                        <Typography variant=\"h6\">Magik: {props.character?.magik}</Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n}","import { useLazyQuery } from '@apollo/client';\r\nimport { Button, Container, Grid, Typography, Paper } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Character from '../models/Character.model';\r\nimport ReportLine from '../models/ReportLine.model';\r\nimport { executeFight } from '../services/ApiService';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nconst getFightQuery = gql`\r\n    query fight($charId: String!){\r\n        fightSetting(charId: $charId){\r\n            player{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            },\r\n            opponent{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default function Arena(props: any){\r\n    //const query = useUrlQuery();\r\n    const history = useHistory();\r\n    const charId = props.charId\r\n    console.log(charId)\r\n    const [playerId] = useState<string>(charId as string);\r\n    \r\n    const [getFight, {data: fightData}] = useLazyQuery(getFightQuery, {fetchPolicy: 'network-only', variables:{charId: charId}});\r\n    const [player, setPlayer] = useState<Character>(fightData?.fightSetting.opponent);\r\n    const [opponent, setOpponent] = useState<Character>(fightData?.fightSetting.player);\r\n    const [combatReport, setCombatReport] = useState<any[]>();\r\n    const [winner, setWinner] = useState<boolean>();\r\n    const [startFight, setStartFight] = useState<boolean>(false)\r\n    const [endFight, setEndFight] = useState<boolean>(false)\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const launchFight = () => {\r\n        setStartFight(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!player && !opponent) getFight()\r\n\r\n        if(fightData?.fightSetting){\r\n            setPlayer(fightData.fightSetting.player);\r\n            setOpponent(fightData.fightSetting.opponent);\r\n        }\r\n        \r\n        /* if(playerId) {\r\n            getOpponent()\r\n        } */\r\n        /* if (data) {\r\n            console.log(data)\r\n            setOpponent(data.fightSetting.opponent);\r\n            setPlayer(data.fightSetting.player);\r\n        } */\r\n        if(combatReport){\r\n            setEndFight(true)\r\n        }\r\n    }, [playerId,  getFight,  combatReport, fightData, opponent, player]);\r\n\r\n    useEffect(() => {\r\n        async function getCombatReport (playerId: string, opponentId: string) {\r\n            \r\n    \r\n            const fightResult = await executeFight(playerId, opponentId);\r\n            console.log(fightResult)\r\n            setCombatReport(fightResult.reportList);\r\n            setWinner(fightResult.winner);\r\n        } \r\n        if (startFight && !endFight) getCombatReport(playerId, opponent?.id as string);\r\n        \r\n    }, [startFight, opponent?.id, playerId, endFight])\r\n    \r\n    \r\n    \r\n    return(\r\n        <Container style={{padding: '1rem'}}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                <Grid container item justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                    <Grid container item xs={6} direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                        <CharacterSheet character={player}/>\r\n                        <Typography variant=\"h4\">VS</Typography>\r\n                        <CharacterSheet character={opponent}/>\r\n                    </Grid>\r\n                    <Button color=\"primary\" variant=\"contained\" disabled={startFight || endFight} onClick={() => launchFight()}>Attaquer !</Button>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" justify=\"center\">\r\n                    {\r\n                        combatReport? \r\n                           \r\n                            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                                <Typography variant=\"h5\">{winner ? 'VICTOIRE' : 'DEFAITE'}</Typography>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={goBack} style={{padding: '1rem', margin: 'auto'}}>Revenir à la selection de personnage</Button>\r\n                            </Grid>\r\n                                \r\n                                    \r\n                            \r\n                        : undefined\r\n                    }\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={6} justify=\"space-evenly\" spacing={1}>\r\n                    {\r\n                        combatReport?.map((reportLine: ReportLine) => {\r\n                            return (\r\n                                <Grid item container direction=\"column\" justify=\"center\" key={combatReport?.indexOf(reportLine)}>\r\n                                    <Paper>\r\n                                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                            <Typography>Tour n° {reportLine.roundNumber} :</Typography>\r\n                                            <Typography>{player?.name} inflige {reportLine.player.attackValue} points de dégats</Typography>\r\n                                            <Typography>{opponent?.name} perd {reportLine.enemy.healthLost} points de vie</Typography>\r\n                                            <Typography>{opponent?.name} inflige {reportLine.enemy.attackValue} points de dégats</Typography>\r\n                                            <Typography>{player?.name} perd {reportLine.player.healthLost} points de vie</Typography>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                    \r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useMutation } from \"@apollo/client\";\r\nimport { Button, CssBaseline, Dialog, DialogActions, DialogContent, DialogTitle, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { AddCircle, RemoveCircle } from \"@material-ui/icons\";\r\nimport gql from \"graphql-tag\";\r\nimport React, { useState, useEffect, ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n}));\r\n\r\nconst editCharacterMutation = gql`\r\n    mutation editCharacter($char: CharacterInput!) {\r\n        editCharacter(character: $char){\r\n            id\r\n            name\r\n            rank\r\n            skillpoints\r\n            health\r\n            attack\r\n            defense\r\n            magik\r\n            userId\r\n        }\r\n    }\r\n        \r\n`\r\n\r\nexport default function CharacterEditor(props: any){\r\n    const [open, setOpen] = useState(props.open);\r\n    const [character] = useState(props.character ?? {name: '', skillpoints: 12, health:10, attack: 0, defense: 0, magik: 0, rank: 1});\r\n    const [editCharacter] = useMutation(editCharacterMutation);\r\n    const [name, setName] = useState<string>();\r\n    const [skillpoints, setSkillpoints] = useState(character.skillpoints);\r\n\r\n    const [health, setHealth] = useState(character.health);\r\n    const [attack, setAttack] = useState(character.attack);\r\n    const [defense, setDefense] = useState(character.defense);\r\n    const [magik, setMagik] = useState(character.magik);\r\n\r\n    const classes = useStyles();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        //props.onClose();\r\n      };\r\n    \r\n    useEffect(() => {\r\n        if(props.open) setOpen(props.open);\r\n        \r\n    }, [props]);\r\n\r\n    const getAttrValue = (attr: string) => {\r\n        switch(attr){\r\n            case 'health':\r\n                return {value: health, handler: setHealth};\r\n            case 'attack': \r\n                return {value: attack, handler: setAttack};\r\n            \r\n            case 'defense':\r\n                return {value: defense, handler: setDefense};\r\n\r\n            case 'magik': \r\n                return {value: magik, handler: setMagik};\r\n\r\n            default:\r\n                return {value: 0, handler: () => {console.error('Attribute not found')}};\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        const char = {\r\n            id: character.id??undefined,\r\n            name: name,\r\n            health: health,\r\n            attack: attack,\r\n            defense: defense,\r\n            magik: magik,\r\n            skillpoints: skillpoints,\r\n            rank: character.rank,\r\n            userId: props.userId\r\n        }\r\n        console.log(char)\r\n        editCharacter({variables: {char: char}});\r\n        props.action(true);\r\n        setOpen(false);\r\n        \r\n    }\r\n\r\n    const handleAddPoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName)\r\n        let cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n        if (skillpoints > 0) {\r\n            if(cost === 0) cost = 1;\r\n            if (skillpoints >= cost){\r\n                attribute.handler(attribute?.value + 1);\r\n            }\r\n               \r\n            setSkillpoints((skillpoints - cost) < 0 ? 0 : skillpoints - cost)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleRemovePoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        let refund: number = attributeName === 'health' ? 1 : Math.ceil(attribute?.value / 5);;\r\n        if (skillpoints < (health + attack + defense + magik + skillpoints)){\r\n                if(refund === 0) refund = 1;\r\n\r\n                if(attribute.value - 1 >= 0 || attribute.value - 1 >= character[attributeName]){\r\n                    attribute.handler(attribute.value - 1);\r\n                }\r\n            setSkillpoints(skillpoints + refund);\r\n        }\r\n    }\r\n\r\n    const handleDisabled = (attributeName: string, action: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        if (action === 'add'){\r\n            \r\n            const cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n            if (skillpoints < cost){\r\n                return true\r\n            }\r\n        } else {\r\n            if(character && character[attributeName] === attribute.value){\r\n                return true;\r\n            }\r\n        }\r\n      \r\n    }\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <CssBaseline/>\r\n            <DialogTitle>{props.character? 'Editer' : 'Créer'} un Personnage</DialogTitle>\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" justify=\"center\">\r\n                        {\r\n                            props.character?\r\n                            <TextField\r\n                            name=\"name\"\r\n                            label=\"Nom\"\r\n                            id=\"name\"\r\n                            required\r\n                            margin=\"normal\"\r\n                            value={character?.name}\r\n                            onChange={handleChange}\r\n                            disabled\r\n                            />\r\n                            :\r\n                            <TextField\r\n                            name=\"name\"\r\n                            label=\"Nom\"\r\n                            id=\"name\"\r\n                            required\r\n                            margin=\"normal\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        }\r\n                        <TextField\r\n                            name=\"skillpoints\"\r\n                            label=\"Points de compétence\"\r\n                            id=\"skillpoints\"\r\n                            disabled\r\n                            value={skillpoints}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('health')} disabled={handleDisabled('health', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"health\"\r\n                                label=\"Endurance\"\r\n                                id=\"health\"\r\n                                disabled\r\n                                value={health}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('health')} disabled={handleDisabled('health', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('attack')} disabled={handleDisabled('attack', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"attack\"\r\n                                label=\"Attaque\"\r\n                                id=\"attack\"\r\n                                disabled\r\n                                value={attack}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('attack')} disabled={handleDisabled('attack', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('defense')} disabled={handleDisabled('defense', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"defense\"\r\n                                label=\"Defense\"\r\n                                id=\"defense\"\r\n                                disabled\r\n                                value={defense}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('defense')} disabled={handleDisabled('defense', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('magik')} disabled={handleDisabled('magik', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"magik\"\r\n                                label=\"Magie\"\r\n                                id=\"magik\"\r\n                                disabled\r\n                                value={magik}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('magik')} disabled={handleDisabled('magik', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Annuler\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Valider\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}","import { gql, useLazyQuery } from '@apollo/client';\r\nimport { Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useJwt } from 'react-jwt';\r\nimport Character from '../models/Character.model';\r\nimport { useAuth } from '../services/AuthService';\r\nimport CharacterEditor from './CharacterEditor';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { Link } from 'react-router-dom';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    },\r\n    empty: {\r\n        height: '100%'\r\n    },\r\n    chargrid: {\r\n        padding: '1rem'\r\n    },\r\n    charLabel: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        '&:hover': {cursor: 'pointer'}\r\n    },\r\n    disabled: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        backgroundColor: 'lightslategrey',\r\n        '&:hover': {cursor: 'not-allowed'}\r\n    },\r\n}));\r\n\r\nconst characterListQuery = gql`\r\n    query characters($userId: String){\r\n        characters(userId: $userId) {\r\n            name\r\n            rank\r\n            skillpoints\r\n            attack\r\n            health\r\n            defense\r\n            magik\r\n            id\r\n            lastFight\r\n        }\r\n    }\r\n`\r\n\r\nconst characterFights = gql`\r\n    query fightsForCharacter($charId: String){\r\n        fightsForCharacter(charId: $charId){\r\n            id\r\n            player{\r\n                name\r\n            }\r\n            enemy{name}\r\n            winner{id}\r\n            looser{id}\r\n            date\r\n        }\r\n    }\r\n`\r\n\r\nexport default function CharacterSelect(props: any){\r\n    const classes = useStyles();\r\n    const [charList, setCharList] = useState<Character[]>();\r\n    const [character, setCharacter] = useState<Character>();\r\n    const [fightHistory, setFightHistory] = useState<any>();\r\n    const [userId, setUserId] = useState<string>();\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [openEditor, setOpenEditor] = useState(false);\r\n    const [displayHisto, setDisplayHisto] = useState(false);\r\n    let auth = useAuth();\r\n    const {decodedToken} = useJwt(auth?.token as string)\r\n\r\n    const [getChars, { loading, data: characterList }] = useLazyQuery(characterListQuery, {fetchPolicy:'no-cache'});\r\n    const [getFightHistory, {data: fights, error: errorFights}] = useLazyQuery(characterFights);\r\n\r\n    const isAvailable = (char: Character) => {\r\n        const now = DateTime.now();\r\n        const lastFight = DateTime.fromMillis(parseInt(char?.lastFight as string));\r\n            if (now.diff(lastFight, 'hours').hours > 1 || !char.lastFight) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if((decodedToken?.id && !charList) || refresh) {\r\n            if (!userId) setUserId(decodedToken.id);\r\n            getChars({variables: {userId: decodedToken.id}})\r\n            setRefresh(false)\r\n        }\r\n        if(characterList){\r\n            console.log(`Character list:: ${JSON.stringify(characterList)}`)\r\n            setCharList(characterList.characters);\r\n        }\r\n        if(fights){\r\n            console.log(`fights:: ${JSON.stringify(fights)}`)\r\n            setFightHistory(fights.fightsForCharacter)\r\n        }\r\n    }, [userId, decodedToken, characterList, getChars, refresh, fights,errorFights, charList]);\r\n\r\n    if(loading) return (<div>loading</div>);\r\n    const creationOK = charList?.length as number < 10;\r\n\r\n    const handleSelect = (id: string) => {\r\n        const char: Character = charList?.find((c) => c.id === id) as Character;\r\n        \r\n        if(char && isAvailable(char)){\r\n            setCharacter(char);\r\n            console.log('getting history')  \r\n            getFightHistory({variables: {charId: id}}) ;     \r\n        }\r\n    }\r\n\r\n    if(!charList || charList?.length <= 0) return (\r\n        <Grid container direction=\"row\" justify=\"center\" className={classes.empty}>\r\n            <CreateCharacterButton userId={userId} action={setRefresh}/>\r\n        </Grid>\r\n        \r\n    )\r\n    else return(\r\n        <Grid container direction=\"row\">\r\n            <Grid container item xs={6} direction=\"column\">\r\n                {\r\n                    charList?.map((c: Character) => {return (\r\n                        <Grid key={c.id} onClick={() => handleSelect(c.id)} className={classes.chargrid}>\r\n                            <Paper className={isAvailable(c) ? classes.charLabel : classes.disabled}>\r\n                                \r\n                                <Grid container item direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n                                    {c.name} Niveau {c.rank}\r\n                                    {\r\n                                        c.skillpoints > 0?\r\n                                            <>\r\n                                                <Button onClick={()=> setOpenEditor(true)} color=\"primary\" variant=\"outlined\">Monter de niveau</Button>\r\n                                                <CharacterEditor open={openEditor} userId={userId} action={setRefresh} character={c}/>\r\n\r\n                                            </>\r\n                                        : undefined\r\n                                    }\r\n                                </Grid>\r\n                                \r\n                            </Paper>\r\n                        </Grid>\r\n                        \r\n                    )})\r\n                }\r\n                {creationOK?<CreateCharacterButton userId={userId} action={setRefresh}/>: undefined}\r\n            </Grid>\r\n            <Grid container item xs={6} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                {character ? (\r\n                    <>\r\n                        <Grid item container justify=\"center\" alignItems=\"center\" direction=\"column\" md={4} className={classes.chargrid}>\r\n                            <CharacterSheet character={character}/>\r\n                        </Grid> \r\n                        <Grid item container alignItems=\"center\" justify=\"space-evenly\" direction=\"row\">\r\n                            {(fightHistory?.length > 0) ?<Button color=\"primary\" variant=\"outlined\" onClick={() => setDisplayHisto(!displayHisto)}>Historique</Button>: undefined}\r\n                            <Button color=\"primary\" variant=\"contained\" >\r\n                                <Link to={`/arena?charId=${character.id}`} className={classes.create}>Entrer dans l'arène</Link>\r\n                            </Button> \r\n                        </Grid>\r\n                        {displayHisto?\r\n                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" hidden={displayHisto}>\r\n                            {\r\n                                fightHistory?.map((f: any) => {\r\n                                    return(\r\n                                        <Paper style={{padding: '1rem'}} key={fightHistory?.indexOf(f)}>\r\n                                            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                                <Typography variant=\"body1\">Le {DateTime.fromMillis(parseInt(f.date)).toLocaleString(DateTime.DATETIME_MED)}</Typography>\r\n                                                <Typography variant=\"body1\">Contre {f.enemy.name}</Typography>\r\n                                                <Typography variant=\"body1\">{f.winner.id === character.id? 'Victoire' : 'Defaite'}</Typography>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </Grid>\r\n                        : undefined}\r\n                        \r\n                    </>\r\n                ) : undefined}\r\n            </Grid>\r\n        </Grid>\r\n            \r\n    )\r\n}\r\n\r\nfunction CreateCharacterButton(props: any) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.create} onClick={handleClick}>Nouveau Personnage</Button>\r\n            <CharacterEditor open={open} userId={props.userId} action={props.action}/>\r\n        </>\r\n    )\r\n}","import { gql, useMutation } from '@apollo/client';\r\nimport { Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst loginMutation = gql`\r\n    mutation login($user: LoginInput!) {\r\n        login(user: $user)\r\n    }\r\n    \r\n`\r\nexport default function SignIn(/* props: {setToken: Function} */){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [login, {error}] = useMutation(loginMutation);\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const auth = useAuth();\r\n\r\n    let { from }: any = location.state as any || { from: { pathname: \"/\" } };\r\n    console.log(from)\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n           switch (event.target.name) {\r\n               case 'username':\r\n                    setUsername(event.target.value);\r\n                    break;\r\n                \r\n                case 'pwd': \r\n                    setPwd(event.target.value);\r\n           }\r\n     }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n      event.preventDefault();\r\n      try{\r\n      const loginData = await login({variables: {user: {username: username, pwd: pwd}}});\r\n      console.log(loginData.data.login);\r\n        auth?.signin(loginData.data.login, () => {\r\n            history.replace(from);\r\n          });\r\n      } catch(e) {\r\n          console.error(e)\r\n      }\r\n      \r\n    }\r\n \r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Connexion\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\">\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        >\r\n                        </TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                        {error? <Typography variant=\"subtitle1\" style={{color:'red'}}>{error.message}</Typography>: undefined}\r\n                    </Grid>\r\n                    \r\n                </form>\r\n                <Typography variant=\"subtitle1\">\r\n                    Pas encore de compte? <Link to=\"/signup\">Créez en un ici!</Link>\r\n                </Typography>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}","import { useMutation } from '@apollo/client';\r\nimport { Container, CssBaseline, makeStyles, Typography, Grid, TextField, Button } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useState } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n}));\r\n\r\nconst signupMutation = gql`\r\n    mutation signup($user: UserInput!) {\r\n        signup(user: $user){\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default function SignUp(){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [firstname, setFirstname] = useState<string>();\r\n    const [lastname, setLastname] = useState<string>();\r\n    const [signup, {error}] = useMutation(signupMutation);\r\n    const auth = useAuth();\r\n\r\n    let history = useHistory();\r\n    let pwdConfirm = true;\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n        switch (event.target.name) {\r\n            case 'username':\r\n                setUsername(event.target.value);\r\n                break;\r\n             \r\n            case 'pwd': \r\n                setPwd(event.target.value);\r\n                break;\r\n            \r\n            case 'lastname': \r\n                setLastname(event.target.value);\r\n                break;\r\n\r\n            case 'firstname': \r\n                setFirstname(event.target.value);\r\n                break;\r\n            \r\n            case 'pwd-confirm':\r\n                pwdConfirm = (event.target.value && event.target.value === pwd) as boolean;\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            username: username,\r\n            pwd: pwd,\r\n            firstname: firstname,\r\n            lastname: lastname\r\n        };\r\n        try {\r\n            const userData = await signup({variables: {user: user}});\r\n            console.log(userData)\r\n            auth?.signin(userData.data.token);\r\n            history.push(\"/character-select\");\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">Créez votre compte</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Grid container direction=\"column\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Nom\"\r\n                            id=\"lastname\"\r\n                            name=\"lastname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Prénom\"\r\n                            id=\"firstname\"\r\n                            name=\"firstname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Confirmer le Mot de Passe\"\r\n                            id=\"pwd-confirm\"\r\n                            name=\"pwd-confirm\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            error={!pwdConfirm}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                        {error? <Typography variant=\"subtitle1\" style={{color:'red'}}>{error.message}</Typography>: undefined}\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import { Home } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Arena from \"./Arena\";\r\nimport CharacterSelect from \"./CharacterSelect\";\r\nimport SignIn from \"./Signin\";\r\nimport SignUp from \"./Signup\";\r\nimport { useAuth } from \"../services/AuthService\";\r\nimport { useUrlQuery } from \"../services/Utils\";\r\n\r\nexport default function Router() {\r\n    let query = useUrlQuery();\r\n\r\n    return (\r\n        <>\r\n            <Route exact path=\"/\"><Home/></Route>\r\n              \r\n              <Route exact path=\"/signup\"><SignUp/></Route>\r\n              <Route exact path=\"/signin\"><SignIn/></Route>\r\n\r\n              <PrivateRoute path=\"/character-select\">\r\n                <CharacterSelect/>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/arena\">\r\n                <Arena charId={query.get('charId')}/>\r\n              </PrivateRoute>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: any) {\r\n    let auth = useAuth();\r\n    console.log(auth)\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          auth?.token ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n                state: { from: location }\r\n              }}\r\n    \r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n    }\r\n    ","import { useLocation } from \"react-router-dom\";\r\n\r\nexport function useUrlQuery() {\r\n    return new URLSearchParams(useLocation().search);  \r\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\r\nimport { ApolloProvider } from '@apollo/client/react';\r\nimport React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Container } from '@material-ui/core';\r\nimport  { authContext, useProvideAuth } from './services/AuthService';\r\nimport Navigation from './components/Navigation';\r\nimport Router from './components/Router';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n    uri: /* 'https://idle-rpg-tribe.herokuapp.com/graphql', */'graphql',\r\n    cache: new InMemoryCache()\r\n  });\r\n  \r\n  return (\r\n    <Container className=\"master\">\r\n      <ApolloProvider client={client}>\r\n      \r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <Navigation/>\r\n            <Switch>\r\n              <Router/>\r\n              \r\n            </Switch>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n        \r\n        \r\n      </ApolloProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ProvideAuth({ children }:any) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}