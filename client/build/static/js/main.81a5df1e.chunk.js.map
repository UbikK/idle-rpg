{"version":3,"sources":["components/Home.tsx","services/AuthService.ts","components/Signup.tsx","components/Signin.tsx","components/CharacterEditor.tsx","components/CharacterSheet.tsx","components/CharacterSelect.tsx","components/Navigation.tsx","services/ApiService.ts","components/Arena.tsx","services/Utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","home","height","innerHome","margin","displayGrid","spacing","alignItems","justifyContent","startCombat","color","textDecoration","Home","classes","Container","className","Grid","container","item","direction","xs","Typography","variant","Button","to","authContext","createContext","undefined","useAuth","useContext","authentication","isAuthenticated","signin","cb","signout","paper","marginTop","display","flexDirection","form","width","submit","signupMutation","gql","SignUp","useState","username","setUsername","pwd","setPwd","firstname","setFirstname","lastname","setLastname","useMutation","signup","error","auth","history","useHistory","pwdConfirm","handleChange","event","target","name","value","handleSubmit","a","preventDefault","user","variables","userData","console","log","data","token","push","component","maxWidth","CssBaseline","onSubmit","autoComplete","TextField","type","label","id","required","fullWidth","onChange","style","message","loginMutation","SignIn","login","location","useLocation","from","state","pathname","loginData","replace","editCharacterMutation","CharacterEditor","props","open","setOpen","character","skillpoints","health","attack","defense","magik","rank","editCharacter","setName","setSkillpoints","setHealth","setAttack","setDefense","setMagik","handleClose","useEffect","getAttrValue","attr","handler","handleAddPoint","attributeName","attribute","cost","Math","ceil","handleRemovePoint","refund","handleDisabled","action","Dialog","onClose","DialogTitle","char","userId","DialogContent","justify","disabled","onClick","RemoveCircle","AddCircle","DialogActions","CharacterSheet","Card","CardContent","alignContent","create","empty","chargrid","padding","charLabel","textAlign","cursor","backgroundColor","characterListQuery","characterFights","CharacterSelect","charList","setCharList","setCharacter","fightHistory","setFightHistory","setUserId","refresh","setRefresh","openEditor","setOpenEditor","displayHisto","setDisplayHisto","decodedToken","useJwt","useLazyQuery","fetchPolicy","getChars","loading","characterList","getFightHistory","fights","errorFights","isAvailable","now","DateTime","lastFight","fromMillis","parseInt","diff","hours","JSON","stringify","characters","fightsForCharacter","creationOK","length","CreateCharacterButton","map","c","find","charId","handleSelect","Paper","md","hidden","f","date","toLocaleString","DATETIME_MED","enemy","winner","indexOf","root","flexGrow","menuButton","marginRight","title","link","Navigation","AppBar","position","Toolbar","executeFight","playerId","opponentId","body","fetch","method","headers","json","fightResult","getFightQuery","Arena","query","URLSearchParams","search","get","useQuery","fightSetting","opponent","player","setPlayer","setOpponent","combatReport","setCombatReport","setWinner","startFight","setStartFight","endFight","setEndFight","reportList","getCombatReport","goBack","reportLine","roundNumber","attackValue","healthLost","ProvideAuth","children","sessionStorage","getItem","setToken","setItem","removeItem","useProvideAuth","Provider","PrivateRoute","rest","render","App","client","ApolloClient","uri","cache","InMemoryCache","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81a5df1e.chunk.js","sourcesContent":["import { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    home: {\r\n      height: '100%'\r\n    },\r\n    innerHome: {\r\n      margin: 'auto',\r\n    },\r\n    displayGrid: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    startCombat:{\r\n      color: 'white',\r\n      textDecoration: 'none',\r\n    }\r\n  }));\r\n\r\nexport default function Home(){\r\n    const classes= useStyles();\r\n    \r\n    return(\r\n            <Container className=\"master\">\r\n              <Grid container className={classes.home}>\r\n                <Grid container item direction=\"column\" alignItems=\"center\" className={classes.innerHome}>\r\n                  <Grid container item direction=\"column\" xs={4} className={classes.displayGrid} spacing={3}>\r\n                    <Typography variant=\"h5\">Bienvenue dans Mon Petit RPG!</Typography>\r\n                    \r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                      <Link to=\"/character-select\" className={classes.startCombat}>\r\n                        Commencer le combat!\r\n                      </Link>\r\n                    </Button>\r\n                  </Grid>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n              \r\n                \r\n            </Container>\r\n        )\r\n    \r\n\r\n    \r\n}","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const authContext = createContext<AuthContext | undefined>(undefined);\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nconst authentication = {\r\n  isAuthenticated: false,\r\n  signin(cb: Function) {\r\n    authentication.isAuthenticated = true;\r\n    cb();\r\n  },\r\n  signout(cb: Function) {\r\n    authentication.isAuthenticated = false;\r\n    cb();\r\n  }\r\n};\r\n\r\n\r\n\r\nexport function useProvideAuth() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n  };\r\n\r\n  const [token, setToken] = useState<string | null>(getToken());\r\n\r\n  const signin = (token: string, cb: Function) => {\r\n    console.log(token)\r\n    if(token){\r\n      \r\n      \r\n      return authentication.signin(() => {\r\n        sessionStorage.setItem('token', token as string);\r\n        setToken(token);\r\n        cb();\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const signout = (cb: Function) => {\r\n    //sessionStorage.removeItem('token');\r\n    return authentication.signout(() => {\r\n      sessionStorage.removeItem('token')\r\n      setToken(null);\r\n      cb();\r\n    });\r\n  };\r\n\r\n  return {\r\n    token,\r\n    signin,\r\n    signout\r\n  };\r\n}\r\n\r\ntype AuthContext = {\r\n  token: string | null,\r\n    signin: Function,\r\n    signout: Function\r\n}\r\n\r\n/* export default function useToken() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n    \r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken: string) => {\r\n    sessionStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n  };\r\n\r\n  const removeToken = () => {\r\n    sessionStorage.removeItem('token');\r\n    setToken(null)\r\n  }\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    removeToken: removeToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n}\r\n\r\nexport interface tokenInterface {\r\n  setToken: any,\r\n    removeToken: any,\r\n    getToken: any,\r\n    token: any\r\n} */","import { useMutation } from '@apollo/client';\r\nimport { Container, CssBaseline, makeStyles, Typography, Grid, TextField, Button } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useState } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n}));\r\n\r\nconst signupMutation = gql`\r\n    mutation signup($user: UserInput!) {\r\n        signup(user: $user){\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default function SignUp(){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [firstname, setFirstname] = useState<string>();\r\n    const [lastname, setLastname] = useState<string>();\r\n    const [signup, {error}] = useMutation(signupMutation);\r\n    const auth = useAuth();\r\n\r\n    let history = useHistory();\r\n    let pwdConfirm = true;\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n        switch (event.target.name) {\r\n            case 'username':\r\n                setUsername(event.target.value);\r\n                break;\r\n             \r\n            case 'pwd': \r\n                setPwd(event.target.value);\r\n                break;\r\n            \r\n            case 'lastname': \r\n                setLastname(event.target.value);\r\n                break;\r\n\r\n            case 'firstname': \r\n                setFirstname(event.target.value);\r\n                break;\r\n            \r\n            case 'pwd-confirm':\r\n                pwdConfirm = (event.target.value && event.target.value === pwd) as boolean;\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            username: username,\r\n            pwd: pwd,\r\n            firstname: firstname,\r\n            lastname: lastname\r\n        };\r\n        try {\r\n            const userData = await signup({variables: {user: user}});\r\n            console.log(userData)\r\n            auth?.signin(userData.data.token);\r\n            history.push(\"/character-select\");\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">Créez votre compte</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Grid container direction=\"column\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Nom\"\r\n                            id=\"lastname\"\r\n                            name=\"lastname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Prénom\"\r\n                            id=\"firstname\"\r\n                            name=\"firstname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Confirmer le Mot de Passe\"\r\n                            id=\"pwd-confirm\"\r\n                            name=\"pwd-confirm\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            error={!pwdConfirm}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                        {error? <Typography variant=\"subtitle1\" style={{color:'red'}}>{error.message}</Typography>: undefined}\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import { gql, useMutation } from '@apollo/client';\r\nimport { Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst loginMutation = gql`\r\n    mutation login($user: LoginInput!) {\r\n        login(user: $user)\r\n    }\r\n    \r\n`\r\nexport default function SignIn(/* props: {setToken: Function} */){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [login, {error}] = useMutation(loginMutation);\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const auth = useAuth();\r\n\r\n    let { from }: any = location.state as any || { from: { pathname: \"/\" } };\r\n    console.log(from)\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n           switch (event.target.name) {\r\n               case 'username':\r\n                    setUsername(event.target.value);\r\n                    break;\r\n                \r\n                case 'pwd': \r\n                    setPwd(event.target.value);\r\n           }\r\n     }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n      event.preventDefault();\r\n      try{\r\n      const loginData = await login({variables: {user: {username: username, pwd: pwd}}});\r\n      console.log(loginData.data.login);\r\n        auth?.signin(loginData.data.login, () => {\r\n            history.replace(from);\r\n          });\r\n      } catch(e) {\r\n          console.error(e)\r\n      }\r\n      \r\n    }\r\n \r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Connexion\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\">\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        >\r\n                        </TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                        {error? <Typography variant=\"subtitle1\" style={{color:'red'}}>{error.message}</Typography>: undefined}\r\n                    </Grid>\r\n                    \r\n                </form>\r\n                <Typography variant=\"subtitle1\">\r\n                    Pas encore de compte? <Link to=\"/signup\">Créez en un ici!</Link>\r\n                </Typography>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}","import { useMutation } from \"@apollo/client\";\r\nimport { Button, CssBaseline, Dialog, DialogActions, DialogContent, DialogTitle, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { AddCircle, RemoveCircle } from \"@material-ui/icons\";\r\nimport gql from \"graphql-tag\";\r\nimport React, { useState, useEffect, ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n}));\r\n\r\nconst editCharacterMutation = gql`\r\n    mutation editCharacter($char: CharacterInput!) {\r\n        editCharacter(character: $char){\r\n            id\r\n            name\r\n            rank\r\n            skillpoints\r\n            health\r\n            attack\r\n            defense\r\n            magik\r\n            userId\r\n        }\r\n    }\r\n        \r\n`\r\n\r\nexport default function CharacterEditor(props: any){\r\n    const [open, setOpen] = useState(props.open);\r\n    const [character] = useState(props.character ?? {name: '', skillpoints: 12, health:10, attack: 0, defense: 0, magik: 0, rank: 1});\r\n    const [editCharacter] = useMutation(editCharacterMutation);\r\n    const [name, setName] = useState<string>();\r\n    const [skillpoints, setSkillpoints] = useState(character.skillpoints);\r\n\r\n    const [health, setHealth] = useState(character.health);\r\n    const [attack, setAttack] = useState(character.attack);\r\n    const [defense, setDefense] = useState(character.defense);\r\n    const [magik, setMagik] = useState(character.magik);\r\n\r\n    const classes = useStyles();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        //props.onClose();\r\n      };\r\n    \r\n    useEffect(() => {\r\n        if(props.open) setOpen(props.open);\r\n        \r\n    }, [props]);\r\n\r\n    const getAttrValue = (attr: string) => {\r\n        switch(attr){\r\n            case 'health':\r\n                return {value: health, handler: setHealth};\r\n            case 'attack': \r\n                return {value: attack, handler: setAttack};\r\n            \r\n            case 'defense':\r\n                return {value: defense, handler: setDefense};\r\n\r\n            case 'magik': \r\n                return {value: magik, handler: setMagik};\r\n\r\n            default:\r\n                return {value: 0, handler: () => {console.error('Attribute not found')}};\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        const char = {\r\n            id: character.id??undefined,\r\n            name: name,\r\n            health: health,\r\n            attack: attack,\r\n            defense: defense,\r\n            magik: magik,\r\n            skillpoints: skillpoints,\r\n            rank: character.rank,\r\n            userId: props.userId\r\n        }\r\n        console.log(char)\r\n        editCharacter({variables: {char: char}});\r\n        props.action(true);\r\n        setOpen(false);\r\n        \r\n    }\r\n\r\n    const handleAddPoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName)\r\n        let cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n        if (skillpoints > 0) {\r\n            if(cost === 0) cost = 1;\r\n            if (skillpoints >= cost){\r\n                attribute.handler(attribute?.value + 1);\r\n            }\r\n               \r\n            setSkillpoints((skillpoints - cost) < 0 ? 0 : skillpoints - cost)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleRemovePoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        let refund: number = attributeName === 'health' ? 1 : Math.ceil(attribute?.value / 5);;\r\n        if (skillpoints < (health + attack + defense + magik + skillpoints)){\r\n                if(refund === 0) refund = 1;\r\n\r\n                if(attribute.value - 1 >= 0 || attribute.value - 1 >= character[attributeName]){\r\n                    attribute.handler(attribute.value - 1);\r\n                }\r\n            setSkillpoints(skillpoints + refund);\r\n        }\r\n    }\r\n\r\n    const handleDisabled = (attributeName: string, action: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        if (action === 'add'){\r\n            \r\n            const cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n            if (skillpoints < cost){\r\n                return true\r\n            }\r\n        } else {\r\n            if(character && character[attributeName] === attribute.value){\r\n                return true;\r\n            }\r\n        }\r\n      \r\n    }\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <CssBaseline/>\r\n            <DialogTitle>{props.character? 'Editer' : 'Créer'} un Personnage</DialogTitle>\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" justify=\"center\">\r\n                        {\r\n                            props.character?\r\n                            <TextField\r\n                            name=\"name\"\r\n                            label=\"Nom\"\r\n                            id=\"name\"\r\n                            required\r\n                            margin=\"normal\"\r\n                            value={character?.name}\r\n                            onChange={handleChange}\r\n                            disabled\r\n                            />\r\n                            :\r\n                            <TextField\r\n                            name=\"name\"\r\n                            label=\"Nom\"\r\n                            id=\"name\"\r\n                            required\r\n                            margin=\"normal\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        }\r\n                        <TextField\r\n                            name=\"skillpoints\"\r\n                            label=\"Points de compétence\"\r\n                            id=\"skillpoints\"\r\n                            disabled\r\n                            value={skillpoints}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('health')} disabled={handleDisabled('health', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"health\"\r\n                                label=\"Endurance\"\r\n                                id=\"health\"\r\n                                disabled\r\n                                value={health}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('health')} disabled={handleDisabled('health', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('attack')} disabled={handleDisabled('attack', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"attack\"\r\n                                label=\"Attaque\"\r\n                                id=\"attack\"\r\n                                disabled\r\n                                value={attack}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('attack')} disabled={handleDisabled('attack', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('defense')} disabled={handleDisabled('defense', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"defense\"\r\n                                label=\"Defense\"\r\n                                id=\"defense\"\r\n                                disabled\r\n                                value={defense}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('defense')} disabled={handleDisabled('defense', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('magik')} disabled={handleDisabled('magik', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"magik\"\r\n                                label=\"Magie\"\r\n                                id=\"magik\"\r\n                                disabled\r\n                                value={magik}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('magik')} disabled={handleDisabled('magik', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Annuler\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Valider\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function CharacterSheet(props: any){\r\n    \r\n    if(!props.character){\r\n        return (\r\n            <></>\r\n        )\r\n    } else {\r\n        return(\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" direction=\"column\">\r\n                        <Typography variant=\"h5\">{props.character?.name}</Typography>\r\n                        <Typography variant=\"h6\">Niveau: {props.character?.rank}</Typography>\r\n                        <Typography variant=\"h6\">Endurance: {props.character?.health}</Typography>\r\n                        <Typography variant=\"h6\">Attaque: {props.character?.attack}</Typography>\r\n                        <Typography variant=\"h6\">Défense: {props.character?.defense}</Typography>\r\n                        <Typography variant=\"h6\">Magik: {props.character?.magik}</Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n}","import { gql, useLazyQuery } from '@apollo/client';\r\nimport { Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useJwt } from 'react-jwt';\r\nimport Character from '../models/Character.model';\r\nimport { useAuth } from '../services/AuthService';\r\nimport CharacterEditor from './CharacterEditor';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { Link } from 'react-router-dom';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    },\r\n    empty: {\r\n        height: '100%'\r\n    },\r\n    chargrid: {\r\n        padding: '1rem'\r\n    },\r\n    charLabel: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        '&:hover': {cursor: 'pointer'}\r\n    },\r\n    disabled: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        backgroundColor: 'lightslategrey',\r\n        '&:hover': {cursor: 'not-allowed'}\r\n    },\r\n}));\r\n\r\nconst characterListQuery = gql`\r\n    query characters($userId: String){\r\n        characters(userId: $userId) {\r\n            name\r\n            rank\r\n            skillpoints\r\n            attack\r\n            health\r\n            defense\r\n            magik\r\n            id\r\n            lastFight\r\n        }\r\n    }\r\n`\r\n\r\nconst characterFights = gql`\r\n    query fightsForCharacter($charId: String){\r\n        fightsForCharacter(charId: $charId){\r\n            id\r\n            player{\r\n                name\r\n            }\r\n            enemy{name}\r\n            winner{id}\r\n            looser{id}\r\n            date\r\n        }\r\n    }\r\n`\r\n\r\nexport default function CharacterSelect(props: any){\r\n    const classes = useStyles();\r\n    const [charList, setCharList] = useState<Character[]>();\r\n    const [character, setCharacter] = useState<Character>();\r\n    const [fightHistory, setFightHistory] = useState<any>();\r\n    const [userId, setUserId] = useState<string>();\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [openEditor, setOpenEditor] = useState(false);\r\n    const [displayHisto, setDisplayHisto] = useState(false);\r\n    let auth = useAuth();\r\n    const {decodedToken} = useJwt(auth?.token as string)\r\n\r\n    const [getChars, { loading, data: characterList }] = useLazyQuery(characterListQuery, {fetchPolicy:'no-cache'});\r\n    const [getFightHistory, {data: fights, error: errorFights}] = useLazyQuery(characterFights);\r\n\r\n    const isAvailable = (char: Character) => {\r\n        const now = DateTime.now();\r\n        const lastFight = DateTime.fromMillis(parseInt(char?.lastFight as string));\r\n            if (now.diff(lastFight, 'hours').hours > 1 || !char.lastFight) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if((decodedToken?.id && !charList) || refresh) {\r\n            if (!userId) setUserId(decodedToken.id);\r\n            getChars({variables: {userId: decodedToken.id}})\r\n            setRefresh(false)\r\n        }\r\n        if(characterList){\r\n            console.log(`Character list:: ${JSON.stringify(characterList)}`)\r\n            setCharList(characterList.characters);\r\n        }\r\n        if(fights){\r\n            console.log(`fights:: ${JSON.stringify(fights)}`)\r\n            setFightHistory(fights.fightsForCharacter)\r\n        }\r\n    }, [userId, decodedToken, characterList, getChars, refresh, fights,errorFights, charList]);\r\n\r\n    if(loading) return (<div>loading</div>);\r\n    const creationOK = charList?.length as number < 10;\r\n\r\n    const handleSelect = (id: string) => {\r\n        const char: Character = charList?.find((c) => c.id === id) as Character;\r\n        \r\n        if(char && isAvailable(char)){\r\n            setCharacter(char);\r\n            console.log('getting history')  \r\n            getFightHistory({variables: {charId: id}}) ;     \r\n        }\r\n    }\r\n\r\n    if(!charList || charList?.length <= 0) return (\r\n        <Grid container direction=\"row\" justify=\"center\" className={classes.empty}>\r\n            <CreateCharacterButton userId={userId} action={setRefresh}/>\r\n        </Grid>\r\n        \r\n    )\r\n    else return(\r\n        <Grid container direction=\"row\">\r\n            <Grid container item xs={6} direction=\"column\">\r\n                {\r\n                    charList?.map((c: Character) => {return (\r\n                        <Grid key={c.id} onClick={() => handleSelect(c.id)} className={classes.chargrid}>\r\n                            <Paper className={isAvailable(c) ? classes.charLabel : classes.disabled}>\r\n                                \r\n                                <Grid container item direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n                                    {c.name} Niveau {c.rank}\r\n                                    {\r\n                                        c.skillpoints > 0?\r\n                                            <>\r\n                                                <Button onClick={()=> setOpenEditor(true)} color=\"primary\" variant=\"outlined\">Monter de niveau</Button>\r\n                                                <CharacterEditor open={openEditor} userId={userId} action={setRefresh} character={c}/>\r\n\r\n                                            </>\r\n                                        : undefined\r\n                                    }\r\n                                </Grid>\r\n                                \r\n                            </Paper>\r\n                        </Grid>\r\n                        \r\n                    )})\r\n                }\r\n                {creationOK?<CreateCharacterButton userId={userId} action={setRefresh}/>: undefined}\r\n            </Grid>\r\n            <Grid container item xs={6} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                {character ? (\r\n                    <>\r\n                        <Grid item container justify=\"center\" alignItems=\"center\" direction=\"column\" md={4} className={classes.chargrid}>\r\n                            <CharacterSheet character={character}/>\r\n                        </Grid> \r\n                        <Grid item container alignItems=\"center\" justify=\"space-evenly\" direction=\"row\">\r\n                            {(fightHistory?.length > 0) ?<Button color=\"primary\" variant=\"outlined\" onClick={() => setDisplayHisto(!displayHisto)}>Historique</Button>: undefined}\r\n                            <Button color=\"primary\" variant=\"contained\" >\r\n                                <Link to={`/arena?charId=${character.id}`} className={classes.create}>Entrer dans l'arène</Link>\r\n                            </Button> \r\n                        </Grid>\r\n                        {displayHisto?\r\n                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" hidden={displayHisto}>\r\n                            {\r\n                                fightHistory?.map((f: any) => {\r\n                                    return(\r\n                                        <Paper style={{padding: '1rem'}} key={fightHistory?.indexOf(f)}>\r\n                                            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                                <Typography variant=\"body1\">Le {DateTime.fromMillis(parseInt(f.date)).toLocaleString(DateTime.DATETIME_MED)}</Typography>\r\n                                                <Typography variant=\"body1\">Contre {f.enemy.name}</Typography>\r\n                                                <Typography variant=\"body1\">{f.winner.id === character.id? 'Victoire' : 'Defaite'}</Typography>\r\n                                            </Grid>\r\n                                        </Paper>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </Grid>\r\n                        : undefined}\r\n                        \r\n                    </>\r\n                ) : undefined}\r\n            </Grid>\r\n        </Grid>\r\n            \r\n    )\r\n}\r\n\r\nfunction CreateCharacterButton(props: any) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.create} onClick={handleClick}>Nouveau Personnage</Button>\r\n            <CharacterEditor open={open} userId={props.userId} action={props.action}/>\r\n        </>\r\n    )\r\n}","import { AppBar, Toolbar, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../services/AuthService\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    }\r\n  }));\r\nexport default function Navigation(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    return (\r\n    <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/\" className={classes.link}>Mon petit RPG</Link>\r\n      </Typography>\r\n      {\r\n        auth?.token?\r\n            <Button color=\"inherit\" onClick={() => auth.signout(() => history.push(\"/\"))}>Me deconnecter</Button>\r\n            : \r\n            <Button color=\"inherit\"><Link to=\"/character-select\" className={classes.link}>Me connecter</Link></Button>}\r\n    </Toolbar>\r\n  </AppBar>\r\n  )\r\n}","export async function executeFight(playerId: string, opponentId: string) {\r\n    const body = {\r\n        playerId: playerId,\r\n        opponentId: opponentId\r\n    }\r\n    const fightResult = await (await fetch('api/fight', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {'Content-Type': 'application/json'}\r\n    })).json();\r\n\r\n    return fightResult\r\n}","import { useQuery } from '@apollo/client';\r\nimport { Button, Container, Grid, Typography, Paper } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Character from '../models/Character.model';\r\nimport ReportLine from '../models/ReportLine.model';\r\nimport { executeFight } from '../services/ApiService';\r\nimport { useUrlQuery } from '../services/Utils';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nconst getFightQuery = gql`\r\n    query fight($charId: String!){\r\n        fightSetting(charId: $charId){\r\n            player{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            },\r\n            opponent{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default function Arena(){\r\n    const query = useUrlQuery();\r\n    const history = useHistory();\r\n    const charId = query.get('charId');\r\n    const [playerId] = useState<string>(charId as string);\r\n    \r\n    const{data} = useQuery(getFightQuery, {fetchPolicy: 'network-only', variables:{charId: playerId}});\r\n    const [player, setPlayer] = useState<Character>(data?.fightSetting.opponent);\r\n    const [opponent, setOpponent] = useState<Character>(data?.fightSetting.player);\r\n    const [combatReport, setCombatReport] = useState<any[]>();\r\n    const [winner, setWinner] = useState<boolean>();\r\n    const [startFight, setStartFight] = useState<boolean>(false)\r\n    const [endFight, setEndFight] = useState<boolean>(false)\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const launchFight = () => {\r\n        setStartFight(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(data)\r\n            setOpponent(data.fightSetting.opponent);\r\n            setPlayer(data.fightSetting.player);\r\n        }\r\n        if(combatReport){\r\n            setEndFight(true)\r\n        }\r\n    }, [playerId, data, /* getFight, */ combatReport]);\r\n\r\n    useEffect(() => {\r\n        async function getCombatReport (playerId: string, opponentId: string) {\r\n            \r\n    \r\n            const fightResult = await executeFight(playerId, opponentId);\r\n            console.log(fightResult)\r\n            setCombatReport(fightResult.reportList);\r\n            setWinner(fightResult.winner);\r\n        } \r\n        if (startFight && !endFight) getCombatReport(playerId, opponent?.id as string);\r\n        \r\n    }, [startFight, opponent?.id, playerId, endFight])\r\n    \r\n    \r\n    \r\n    return(\r\n        <Container style={{padding: '1rem'}}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                <Grid container item justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                    <Grid container item xs={6} direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                        <CharacterSheet character={player}/>\r\n                        <Typography variant=\"h4\">VS</Typography>\r\n                        <CharacterSheet character={opponent}/>\r\n                    </Grid>\r\n                    <Button color=\"primary\" variant=\"contained\" disabled={startFight || endFight} onClick={() => launchFight()}>Attaquer !</Button>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" justify=\"center\">\r\n                    {\r\n                        combatReport? \r\n                           \r\n                            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                                <Typography variant=\"h5\">{winner ? 'VICTOIRE' : 'DEFAITE'}</Typography>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={goBack} style={{padding: '1rem', margin: 'auto'}}>Revenir à la selection de personnage</Button>\r\n                            </Grid>\r\n                                \r\n                                    \r\n                            \r\n                        : undefined\r\n                    }\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={6} justify=\"space-evenly\" spacing={1}>\r\n                    {\r\n                        combatReport?.map((reportLine: ReportLine) => {\r\n                            return (\r\n                                <Grid item container direction=\"column\" justify=\"center\" key={combatReport?.indexOf(reportLine)}>\r\n                                    <Paper>\r\n                                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                            <Typography>Tour n° {reportLine.roundNumber} :</Typography>\r\n                                            <Typography>{player?.name} inflige {reportLine.player.attackValue} points de dégats</Typography>\r\n                                            <Typography>{opponent?.name} perd {reportLine.enemy.healthLost} points de vie</Typography>\r\n                                            <Typography>{opponent?.name} inflige {reportLine.enemy.attackValue} points de dégats</Typography>\r\n                                            <Typography>{player?.name} perd {reportLine.player.healthLost} points de vie</Typography>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                    \r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useLocation } from \"react-router-dom\";\r\n\r\nexport function useUrlQuery() {\r\n    return new URLSearchParams(useLocation().search);  \r\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\r\nimport { ApolloProvider } from '@apollo/client/react';\r\nimport React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport SignUp from './components/Signup';\r\nimport { Container } from '@material-ui/core';\r\nimport  { authContext, useAuth, useProvideAuth } from './services/AuthService';\r\nimport SignIn from './components/Signin';\r\nimport CharacterSelect from './components/CharacterSelect';\r\nimport Navigation from './components/Navigation';\r\nimport Arena from './components/Arena';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n    uri: /* 'https://idle-rpg-tribe.herokuapp.com/graphql', */'graphql',\r\n    cache: new InMemoryCache()\r\n  });\r\n  \r\n  return (\r\n    <Container className=\"master\">\r\n      <ApolloProvider client={client}>\r\n      \r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <Navigation/>\r\n            <Switch>\r\n\r\n              <Route exact path=\"/\"><Home/></Route>\r\n              \r\n              <Route exact path=\"/signup\"><SignUp/></Route>\r\n              <Route exact path=\"/signin\"><SignIn/></Route>\r\n\r\n              <PrivateRoute path=\"/character-select\">\r\n                <CharacterSelect/>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/arena\">\r\n                <Arena/>\r\n              </PrivateRoute>\r\n            </Switch>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n        \r\n        \r\n      </ApolloProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ProvideAuth({ children }:any) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: any) {\r\nlet auth = useAuth();\r\nconsole.log(auth)\r\nreturn (\r\n  <Route\r\n    {...rest}\r\n    render={({ location }) =>\r\n      auth?.token ? (\r\n        children\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/signin\",\r\n            state: { from: location }\r\n          }}\r\n\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}