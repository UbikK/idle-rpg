{"version":3,"sources":["components/Home.tsx","services/AuthService.ts","components/Signup.tsx","components/Signin.tsx","components/CharacterEditor.tsx","components/CharacterSheet.tsx","components/CharacterSelect.tsx","components/Navigation.tsx","services/ApiService.ts","components/Arena.tsx","services/Utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","home","height","innerHome","margin","displayGrid","spacing","alignItems","justifyContent","startCombat","color","textDecoration","Home","classes","Container","className","Grid","container","item","direction","xs","Typography","variant","Button","to","authContext","createContext","undefined","useAuth","useContext","authentication","isAuthenticated","signin","cb","signout","paper","marginTop","display","flexDirection","form","width","submit","signupMutation","gql","SignUp","useState","username","setUsername","pwd","setPwd","firstname","setFirstname","lastname","setLastname","useMutation","signup","auth","data","history","useHistory","pwdConfirm","handleChange","event","target","name","value","handleSubmit","a","preventDefault","user","variables","userData","console","log","token","push","component","maxWidth","CssBaseline","onSubmit","autoComplete","TextField","type","label","id","required","fullWidth","onChange","error","loginMutation","SignIn","login","location","useLocation","from","state","pathname","loginData","replace","editCharacterMutation","CharacterEditor","props","open","setOpen","character","skillpoints","health","attack","defense","magik","rank","editCharacter","setName","setSkillpoints","setHealth","setAttack","setDefense","setMagik","handleClose","useEffect","getAttrValue","attr","handler","handleAddPoint","attributeName","attribute","cost","Math","ceil","handleRemovePoint","refund","handleDisabled","action","Dialog","onClose","DialogTitle","char","userId","DialogContent","justify","disabled","onClick","RemoveCircle","AddCircle","DialogActions","CharacterSheet","Card","CardContent","alignContent","create","empty","chargrid","padding","charLabel","textAlign","cursor","backgroundColor","characterListQuery","CharacterSelect","charList","setCharList","setCharacter","setUserId","refresh","setRefresh","openEditor","setOpenEditor","decodedToken","useJwt","useLazyQuery","getChars","loading","isAvailable","now","DateTime","lastFight","fromMillis","parseInt","diff","hours","JSON","stringify","characters","creationOK","length","CreateCharacterButton","map","c","find","handleSelect","Paper","md","root","flexGrow","menuButton","marginRight","title","link","Navigation","AppBar","position","Toolbar","executeFight","playerId","opponentId","body","fetch","method","headers","json","fightResult","getFightQuery","Arena","query","URLSearchParams","search","charId","get","player","setPlayer","opponent","setOpponent","getFight","combatReport","setCombatReport","winner","setWinner","startFight","setStartFight","endFight","setEndFight","context","fetchPolicy","newFecthPolicy","fight","reportList","getCombatReport","style","goBack","reportLine","roundNumber","attackValue","enemy","healthLost","indexOf","ProvideAuth","children","sessionStorage","getItem","setToken","setItem","removeItem","useProvideAuth","Provider","PrivateRoute","rest","render","App","client","ApolloClient","uri","cache","InMemoryCache","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uUAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,OAAQ,QAEVC,UAAW,CACTC,OAAQ,QAEVC,YAAa,CACXD,OAAQJ,EAAMM,QAAQ,EAAG,EAAG,GAC5BC,WAAY,SACZC,eAAgB,UAElBC,YAAY,CACVC,MAAO,QACPC,eAAgB,YAIP,SAASC,IACpB,IAAMC,EAASf,IAEf,OACQ,cAACgB,EAAA,EAAD,CAAWC,UAAU,SAArB,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACF,UAAWF,EAAQZ,KAAnC,SACE,cAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,SAASZ,WAAW,SAASQ,UAAWF,EAAQV,UAA/E,SACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,SAASC,GAAI,EAAGL,UAAWF,EAAQR,YAAaC,QAAS,EAAxF,UACE,cAACe,EAAA,EAAD,CAAYC,QAAQ,KAApB,2CAEA,cAACC,EAAA,EAAD,CAAQD,QAAQ,YAAYZ,MAAM,UAAlC,SACE,cAAC,IAAD,CAAMc,GAAG,oBAAoBT,UAAWF,EAAQJ,YAAhD,6C,uECjCTgB,EAAcC,6BAAuCC,GAE3D,SAASC,IACd,OAAOC,qBAAWJ,GAGpB,I,EAAMK,EAAiB,CACrBC,iBAAiB,EACjBC,OAFqB,SAEdC,GACLH,EAAeC,iBAAkB,EACjCE,KAEFC,QANqB,SAMbD,GACNH,EAAeC,iBAAkB,EACjCE,MCRJ,I,EAAMnC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmC,MAAO,CACHC,UAAWpC,EAAMM,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACf/B,WAAY,UAEdgC,KAAM,CACJC,MAAO,OACPJ,UAAWpC,EAAMM,QAAQ,IAE3BmC,OAAQ,CACNrC,OAAQJ,EAAMM,QAAQ,EAAG,EAAG,QAI9BoC,EAAiBC,YAAH,yIAQL,SAASC,IACpB,IAAM/B,EAAUf,IADY,EAEI+C,qBAFJ,mBAErBC,EAFqB,KAEXC,EAFW,OAGNF,qBAHM,mBAGrBG,EAHqB,KAGhBC,EAHgB,OAIMJ,qBAJN,mBAIrBK,EAJqB,KAIVC,EAJU,OAKIN,qBALJ,mBAKrBO,EALqB,KAKXC,EALW,OAMHC,sBAAYZ,GANT,mBAMrBa,EANqB,KAOtBC,GAPsB,KAMZC,KACH7B,KAET8B,EAAUC,cACVC,GAAa,EAEXC,EAAe,SAACC,GAClB,OAAQA,EAAMC,OAAOC,MACjB,IAAK,WACDjB,EAAYe,EAAMC,OAAOE,OACzB,MAEJ,IAAK,MACDhB,EAAOa,EAAMC,OAAOE,OACpB,MAEJ,IAAK,WACDZ,EAAYS,EAAMC,OAAOE,OACzB,MAEJ,IAAK,YACDd,EAAaW,EAAMC,OAAOE,OAC1B,MAEJ,IAAK,cACDL,EAAcE,EAAMC,OAAOE,OAASH,EAAMC,OAAOE,QAAUjB,IAKjEkB,EAAY,uCAAG,WAAOJ,GAAP,iBAAAK,EAAA,6DACjBL,EAAMM,iBACAC,EAAO,CACTvB,SAAUA,EACVE,IAAKA,EACLE,UAAWA,EACXE,SAAUA,GANG,SAQMG,EAAO,CAACe,UAAW,CAACD,KAAMA,KARhC,OAQXE,EARW,OASjBC,QAAQC,IAAIF,GACR,OAAJf,QAAI,IAAJA,KAAMxB,OAAOuC,EAASd,KAAKiB,OAC3BhB,EAAQiB,KAAK,qBAXI,2CAAH,sDAclB,OACI,eAAC7D,EAAA,EAAD,CAAW8D,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAK/D,UAAWF,EAAQsB,MAAxB,UACI,cAACd,EAAA,EAAD,CAAYuD,UAAU,KAAKtD,QAAQ,KAAnC,mCACA,sBAAMP,UAAWF,EAAQ0B,KAAMwC,SAAUb,EAAcc,aAAa,MAApE,SACI,eAAChE,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAA1B,UACI,cAAC8D,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,OACLC,MAAM,MACNC,GAAG,WACHpB,KAAK,WACL5D,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAEd,cAACoB,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,OACLC,MAAM,YACNC,GAAG,YACHpB,KAAK,YACL5D,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAEd,cAACoB,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,QACLlB,KAAK,WACLoB,GAAG,WACHD,MAAM,gBACN/E,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAEd,cAACoB,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,WACLC,MAAM,eACNC,GAAG,MACHpB,KAAK,MACL5D,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAEd,cAACoB,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,WACLC,MAAM,4BACNC,GAAG,cACHpB,KAAK,cACL5D,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,EACV2B,OAAQ5B,IAEZ,cAACrC,EAAA,EAAD,CACID,QAAQ,YACR4D,KAAK,SACLxE,MAAM,UACNK,UAAWF,EAAQ4B,OAJvB,kCC3IxB,IAAM3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmC,MAAO,CACLC,UAAWpC,EAAMM,QAAQ,GACzB+B,QAAS,OACTC,cAAe,SACf/B,WAAY,UAEdgC,KAAM,CACJC,MAAO,OACPJ,UAAWpC,EAAMM,QAAQ,IAE3BmC,OAAQ,CACNrC,OAAQJ,EAAMM,QAAQ,EAAG,EAAG,QAI5BmF,EAAgB9C,cAAH,+GAMJ,SAAS+C,IACpB,IAAM7E,EAAUf,IAD6C,EAE7B+C,qBAF6B,mBAEtDC,EAFsD,KAE5CC,EAF4C,OAGvCF,qBAHuC,mBAGtDG,EAHsD,KAGjDC,EAHiD,OAIrCK,sBAAYmC,GAJyB,mBAItDE,EAJsD,KAKzDjC,GALyD,KAI9CD,KACDE,eACViC,EAAWC,cACTrC,EAAO5B,IAEPkE,GAAcF,EAASG,OAAgB,CAAED,KAAM,CAAEE,SAAU,OAA3DF,KACNtB,QAAQC,IAAIqB,GACZ,IAAMjC,EAAe,SAACC,GACf,OAAQA,EAAMC,OAAOC,MACjB,IAAK,WACAjB,EAAYe,EAAMC,OAAOE,OACzB,MAEJ,IAAK,MACDhB,EAAOa,EAAMC,OAAOE,SAI9BC,EAAY,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DACnBL,EAAMM,iBADa,SAEKuB,EAAM,CAACrB,UAAW,CAACD,KAAM,CAACvB,SAAUA,EAAUE,IAAKA,MAFxD,OAEbiD,EAFa,OAGnBzB,QAAQC,IAAIwB,EAAUxC,KAAKkC,OAEvB,OAAJnC,QAAI,IAAJA,KAAMxB,OAAOiE,EAAUxC,KAAKkC,OAAO,WACjCjC,EAAQwC,QAAQJ,MANC,2CAAH,sDAalB,OACI,eAAChF,EAAA,EAAD,CAAW8D,UAAU,OAAOC,SAAS,KAArC,UACI,cAACC,EAAA,EAAD,IACA,sBAAK/D,UAAWF,EAAQsB,MAAxB,UACI,cAACd,EAAA,EAAD,CAAYuD,UAAU,KAAKtD,QAAQ,KAAnC,uBAGA,sBAAMP,UAAWF,EAAQ0B,KAAMwC,SAAUb,EAAzC,SACI,eAAClD,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAA1B,UACI,cAAC8D,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,QACLlB,KAAK,WACLoB,GAAG,WACHD,MAAM,gBACN/E,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAGd,cAACoB,EAAA,EAAD,CACI3D,QAAQ,WACR4D,KAAK,WACLC,MAAM,eACNC,GAAG,MACHpB,KAAK,MACL5D,OAAO,SACPiF,UAAQ,EACRC,WAAS,EACTC,SAAU1B,IAEd,cAACtC,EAAA,EAAD,CACID,QAAQ,YACR4D,KAAK,SACLxE,MAAM,UACNK,UAAWF,EAAQ4B,OAJvB,4BAUR,eAACpB,EAAA,EAAD,CAAYC,QAAQ,YAApB,mCAC0B,cAAC,IAAD,CAAME,GAAG,UAAT,0C,8ECpGpC1B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuC,KAAM,CACFC,MAAO,OACPJ,UAAWpC,EAAMM,QAAQ,QAI3B6F,EAAwBxD,YAAH,yUAiBZ,SAASyD,EAAgBC,GAAY,IAAD,IACvBxD,mBAASwD,EAAMC,MADQ,mBACxCA,EADwC,KAClCC,EADkC,OAE3B1D,mBAAQ,UAACwD,EAAMG,iBAAP,QAAoB,CAACxC,KAAM,GAAIyC,YAAa,GAAIC,OAAO,GAAIC,OAAQ,EAAGC,QAAS,EAAGC,MAAO,EAAGC,KAAM,IAAvHN,EAFwC,sBAGflD,sBAAY6C,GAHG,mBAGxCY,EAHwC,aAGxBtD,KACCZ,sBAJuB,mBAIxCmB,EAJwC,KAIlCgD,EAJkC,OAKTnE,mBAAS2D,EAAUC,aALV,mBAKxCA,EALwC,KAK3BQ,EAL2B,OAOnBpE,mBAAS2D,EAAUE,QAPA,mBAOxCA,EAPwC,KAOhCQ,EAPgC,OAQnBrE,mBAAS2D,EAAUG,QARA,mBAQxCA,EARwC,KAQhCQ,EARgC,OASjBtE,mBAAS2D,EAAUI,SATF,mBASxCA,EATwC,KAS/BQ,EAT+B,OAUrBvE,mBAAS2D,EAAUK,OAVE,mBAUxCA,EAVwC,KAUjCQ,EAViC,KAYzCxG,EAAUf,IACVwH,EAAc,WAChBf,GAAQ,IAIZgB,qBAAU,WACHlB,EAAMC,MAAMC,EAAQF,EAAMC,QAE9B,CAACD,IAEJ,IAAMmB,EAAe,SAACC,GAClB,OAAOA,GACH,IAAK,SACD,MAAO,CAACxD,MAAOyC,EAAQgB,QAASR,GACpC,IAAK,SACD,MAAO,CAACjD,MAAO0C,EAAQe,QAASP,GAEpC,IAAK,UACD,MAAO,CAAClD,MAAO2C,EAASc,QAASN,GAErC,IAAK,QACD,MAAO,CAACnD,MAAO4C,EAAOa,QAASL,GAEnC,QACI,MAAO,CAACpD,MAAO,EAAGyD,QAAS,WAAOlD,QAAQgB,MAAM,2BAwBtDmC,GAAiB,SAACC,GACpB,IAAMC,EAAYL,EAAaI,GAC3BE,EAAyB,WAAlBF,EAA4B,EAAIG,KAAKC,MAAc,OAATH,QAAS,IAATA,OAAA,EAAAA,EAAW5D,OAAQ,GACpEwC,EAAc,IACF,IAATqB,IAAYA,EAAO,GAClBrB,GAAeqB,GACfD,EAAUH,SAAiB,OAATG,QAAS,IAATA,OAAA,EAAAA,EAAW5D,OAAQ,GAGzCgD,EAAgBR,EAAcqB,EAAQ,EAAI,EAAIrB,EAAcqB,KAK9DG,GAAoB,SAACL,GACvB,IAAMC,EAAYL,EAAaI,GAC3BM,EAAmC,WAAlBN,EAA6B,EAAIG,KAAKC,MAAc,OAATH,QAAS,IAATA,OAAA,EAAAA,EAAW5D,OAAQ,GAC/EwC,EAAeC,EAASC,EAASC,EAAUC,EAAQJ,IACjC,IAAXyB,IAAcA,EAAS,IAEvBL,EAAU5D,MAAQ,GAAK,GAAK4D,EAAU5D,MAAQ,GAAKuC,EAAUoB,KAC5DC,EAAUH,QAAQG,EAAU5D,MAAQ,GAE5CgD,EAAeR,EAAcyB,KAI/BC,GAAiB,SAACP,EAAuBQ,GAC3C,IAAMP,EAAYL,EAAaI,GAC/B,GAAe,QAAXQ,EAAiB,CAEjB,IAAMN,EAAyB,WAAlBF,EAA4B,EAAIG,KAAKC,MAAc,OAATH,QAAS,IAATA,OAAA,EAAAA,EAAW5D,OAAQ,GAC1E,GAAIwC,EAAcqB,EACd,OAAO,OAGX,GAAGtB,GAAaA,EAAUoB,KAAmBC,EAAU5D,MACnD,OAAO,GAUnB,OACI,eAACoE,EAAA,EAAD,CAAQ/B,KAAMA,EAAMgC,QAAShB,EAA7B,UACI,cAACxC,EAAA,EAAD,IACA,eAACyD,EAAA,EAAD,WAAclC,EAAMG,UAAW,SAAW,WAA1C,oBACA,uBAAMzB,SAvEO,SAACjB,GAAgB,IAAD,EACjCA,EAAMM,iBACN,IAAMoE,EAAO,CACTpD,GAAE,UAAEoB,EAAUpB,UAAZ,aAAgBzD,EAClBqC,KAAMA,EACN0C,OAAQA,EACRC,OAAQA,EACRC,QAASA,EACTC,MAAOA,EACPJ,YAAaA,EACbK,KAAMN,EAAUM,KAChB2B,OAAQpC,EAAMoC,QAElBjE,QAAQC,IAAI+D,GACZzB,EAAc,CAACzC,UAAW,CAACkE,KAAMA,KACjCnC,EAAM+B,QAAO,GACb7B,GAAQ,IAuD0BxF,UAAWF,EAAQ0B,KAAjD,UACI,cAACmG,EAAA,EAAD,UACI,eAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASwH,QAAQ,SAA3C,UACI,cAAC1D,EAAA,EAAD,CACIjB,KAAK,OACLmB,MAAM,MACNC,GAAG,OACHC,UAAQ,EACRjF,OAAO,SACP6D,MAAK,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAWxC,KAClBuB,SAlBH,SAACzB,GAClBkD,EAAQlD,EAAMC,OAAOE,QAkBD2E,YAAmB,OAATpC,QAAS,IAATA,OAAA,EAAAA,EAAWxC,QAEzB,cAACiB,EAAA,EAAD,CACIjB,KAAK,cACLmB,MAAM,0BACNC,GAAG,cACHwD,UAAQ,EACR3E,MAAOwC,EACPrG,OAAO,WAEX,eAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,MAAMwH,QAAQ,SAA7C,UACI,cAACpH,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMZ,GAAkB,WAAWW,SAAUT,GAAe,SAAU,UAAvG,SAAkH,cAACW,EAAA,EAAD,MAClH,cAAC7D,EAAA,EAAD,CACIjB,KAAK,SACLmB,MAAM,YACNC,GAAG,SACHwD,UAAQ,EACR3E,MAAOyC,EACPtG,OAAO,WAEX,cAACmB,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMlB,GAAe,WAAWiB,SAAUT,GAAe,SAAU,OAApG,SAA4G,cAACY,EAAA,EAAD,SAEhH,eAAC/H,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,MAAMwH,QAAQ,SAA7C,UACI,cAACpH,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMZ,GAAkB,WAAWW,SAAUT,GAAe,SAAU,UAAvG,SAAkH,cAACW,EAAA,EAAD,MAClH,cAAC7D,EAAA,EAAD,CACIjB,KAAK,SACLmB,MAAM,UACNC,GAAG,SACHwD,UAAQ,EACR3E,MAAO0C,EACPvG,OAAO,WAEX,cAACmB,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMlB,GAAe,WAAWiB,SAAUT,GAAe,SAAU,OAApG,SAA4G,cAACY,EAAA,EAAD,SAEhH,eAAC/H,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,MAAMwH,QAAQ,SAA7C,UACI,cAACpH,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMZ,GAAkB,YAAYW,SAAUT,GAAe,UAAW,UAAzG,SAAoH,cAACW,EAAA,EAAD,MACpH,cAAC7D,EAAA,EAAD,CACIjB,KAAK,UACLmB,MAAM,UACNC,GAAG,UACHwD,UAAQ,EACR3E,MAAO2C,EACPxG,OAAO,WAEX,cAACmB,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMlB,GAAe,YAAYiB,SAAUT,GAAe,UAAW,OAAtG,SAA8G,cAACY,EAAA,EAAD,SAElH,eAAC/H,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,MAAMwH,QAAQ,SAA7C,UACI,cAACpH,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMZ,GAAkB,UAAUW,SAAUT,GAAe,QAAS,UAArG,SAAgH,cAACW,EAAA,EAAD,MAChH,cAAC7D,EAAA,EAAD,CACIjB,KAAK,QACLmB,MAAM,QACNC,GAAG,QACHwD,UAAQ,EACR3E,MAAO4C,EACPzG,OAAO,WAEX,cAACmB,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMlB,GAAe,UAAUiB,SAAUT,GAAe,QAAS,OAAlG,SAA0G,cAACY,EAAA,EAAD,cAMtH,eAACC,EAAA,EAAD,WACI,cAACzH,EAAA,EAAD,CAAQsH,QAASvB,EAAa5G,MAAM,UAApC,qBAGA,cAACa,EAAA,EAAD,CAAQ2D,KAAK,SAASxE,MAAM,UAA5B,8B,sBCxNL,SAASuI,GAAe5C,GAM3B,IAAD,YAJP,OAAIA,EAAMG,UAMF,cAAC0C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,eAACnI,EAAA,EAAD,CAAMC,WAAS,EAAC0H,QAAQ,SAASS,aAAa,SAAS7I,WAAW,SAASY,UAAU,SAArF,UACI,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAA0B+E,EAAMG,iBAAhC,aAA0B,EAAiBxC,OAC3C,eAAC3C,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAAkC+E,EAAMG,iBAAxC,aAAkC,EAAiBM,QACnD,eAACzF,EAAA,EAAD,CAAYC,QAAQ,KAApB,kCAAqC+E,EAAMG,iBAA3C,aAAqC,EAAiBE,UACtD,eAACrF,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAAmC+E,EAAMG,iBAAzC,aAAmC,EAAiBG,UACpD,eAACtF,EAAA,EAAD,CAAYC,QAAQ,KAApB,mCAAmC+E,EAAMG,iBAAzC,aAAmC,EAAiBI,WACpD,eAACvF,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAAiC+E,EAAMG,iBAAvC,aAAiC,EAAiBK,gBAZ9D,6B,gBCIN/G,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqJ,OAAQ,CACJ3I,MAAO,QACPC,eAAgB,QAEpB2I,MAAO,CACHpJ,OAAQ,QAEZqJ,SAAU,CACNC,QAAS,QAEbC,UAAW,CACPD,QAAS,OACTE,UAAW,SACX,UAAW,CAACC,OAAQ,YAExBf,SAAU,CACNY,QAAS,OACTE,UAAW,SACXE,gBAAiB,iBACjB,UAAW,CAACD,OAAQ,oBAItBE,GAAqBlH,cAAH,mTAgBT,SAASmH,GAAgBzD,GACpC,IAAMxF,EAAUf,KAD+B,EAEf+C,qBAFe,mBAExCkH,EAFwC,KAE9BC,EAF8B,OAGbnH,qBAHa,mBAGxC2D,EAHwC,KAG7ByD,EAH6B,OAInBpH,qBAJmB,mBAIxC4F,EAJwC,KAIhCyB,EAJgC,OAKjBrH,oBAAS,GALQ,mBAKxCsH,EALwC,KAK/BC,EAL+B,OAMXvH,oBAAS,GANE,mBAMxCwH,EANwC,KAM5BC,EAN4B,KAO3C9G,EAAO5B,IACJ2I,EAAgBC,YAAM,OAAChH,QAAD,IAACA,OAAD,EAACA,EAAMkB,OAA7B6F,aARwC,EAUTE,uBAAaZ,IAVJ,mBAUxCa,EAVwC,YAU5BC,EAV4B,EAU5BA,QAASlH,EAVmB,EAUnBA,KAEtBmH,EAAc,SAACpC,GACjB,IAAMqC,EAAMC,YAASD,MACfE,EAAYD,YAASE,WAAWC,SAAQ,OAACzC,QAAD,IAACA,OAAD,EAACA,EAAMuC,YAEjD,OADJvG,QAAQC,IAAIoG,EAAIK,KAAKH,EAAW,UACxBF,EAAIK,KAAKH,EAAW,SAASI,MAAQ,GAoBjD,GAbA5D,qBAAU,aACS,OAAZgD,QAAY,IAAZA,OAAA,EAAAA,EAAcnF,KAAM+E,KACnBD,EAAUK,EAAanF,IACvBsF,EAAS,CAACpG,UAAW,CAACmE,OAAQ8B,EAAanF,OAE5C3B,IACCe,QAAQC,IAAR,2BAAgC2G,KAAKC,UAAU5H,KAC/CuG,EAAYvG,EAAK6H,eAItB,CAACf,EAAc9G,EAAMiH,EAAUP,IAE/BQ,EAAS,OAAQ,0CACpB,IAAMY,GAAqB,OAARxB,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,QAAmB,GAUhD,OAAIzB,IAAoB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUyB,SAAU,EAChC,cAACxK,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,MAAMwH,QAAQ,SAAS5H,UAAWF,EAAQyI,MAApE,SACI,cAACmC,GAAD,CAAuBhD,OAAQA,EAAQL,OAAQgC,MAKnD,eAACpJ,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,MAA1B,UACI,eAACH,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACE,GAAI,EAAGD,UAAU,SAAtC,iBAEQ4I,QAFR,IAEQA,OAFR,EAEQA,EAAU2B,KAAI,SAACC,GAAkB,OAC7B,cAAC3K,EAAA,EAAD,CAAiB6H,QAAS,kBAnBzB,SAACzD,GAClB,IAAMoD,EAAe,OAAGuB,QAAH,IAAGA,OAAH,EAAGA,EAAU6B,MAAK,SAACD,GAAD,OAAOA,EAAEvG,KAAOA,KAEpDoD,GAAQoC,EAAYpC,IACnByB,EAAazB,GAe+BqD,CAAaF,EAAEvG,KAAKrE,UAAWF,EAAQ0I,SAAvE,SACI,cAACuC,EAAA,EAAD,CAAO/K,UAAW6J,EAAYe,GAAK9K,EAAQ4I,UAAY5I,EAAQ+H,SAA/D,SAEI,eAAC5H,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,MAAMwH,QAAQ,eAAepI,WAAW,SAAvE,UACKoL,EAAE3H,KADP,WACqB2H,EAAE7E,KAEf6E,EAAElF,YAAc,EACZ,qCACI,cAAClF,EAAA,EAAD,CAAQsH,QAAS,kBAAKyB,GAAc,IAAO5J,MAAM,UAAUY,QAAQ,WAAnE,8BACA,cAAC8E,EAAD,CAAiBE,KAAM+D,EAAY5B,OAAQA,EAAQL,OAAQgC,EAAY5D,UAAWmF,YAGxFhK,QAZPgK,EAAEvG,OAqBpBmG,EAAW,cAACE,GAAD,CAAuBhD,OAAQA,EAAQL,OAAQgC,SAAezI,KAE9E,cAACX,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACE,GAAI,EAAGD,UAAU,SAASZ,WAAW,SAASoI,QAAQ,SAA3E,SACKnC,EACG,qCACI,cAACxF,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAAC0H,QAAQ,SAASpI,WAAW,SAASY,UAAU,SAAS4K,GAAI,EAAGhL,UAAWF,EAAQ0I,SAAvG,SACI,cAACN,GAAD,CAAgBzC,UAAWA,MAE/B,8BACI,cAACjF,EAAA,EAAD,CAAQb,MAAM,UAAUY,QAAQ,YAAhC,SACI,cAAC,IAAD,CAAME,GAAE,wBAAmBgF,EAAUpB,IAAMrE,UAAWF,EAAQwI,OAA9D,gDAKZ1H,OAOpB,SAAS8J,GAAsBpF,GAC3B,IAAMxF,EAAUf,KADuB,EAEf+C,oBAAkB,GAFH,mBAEhCyD,EAFgC,KAE1BC,EAF0B,KAMvC,OACI,qCACI,cAAChF,EAAA,EAAD,CAAQD,QAAQ,YAAYZ,MAAM,UAAUK,UAAWF,EAAQwI,OAAQR,QAL3D,WAChBtC,GAAQ,IAIJ,gCACA,cAACH,EAAD,CAAiBE,KAAMA,EAAMmC,OAAQpC,EAAMoC,OAAQL,OAAQ/B,EAAM+B,Y,2BC5JvEtI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgM,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAanM,EAAMM,QAAQ,IAE7B8L,MAAO,CACLH,SAAU,GAEZI,KAAM,CACF1L,eAAgB,OAChBD,MAAO,aAGA,SAAS4L,KACpB,IAAMzL,EAAUf,KACV4D,EAAUC,cACVH,EAAO5B,IACb,OACA,cAAC2K,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACA,eAACC,GAAA,EAAD,WACE,cAACpL,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWF,EAAQuL,MAA5C,SACI,cAAC,IAAD,CAAM5K,GAAG,IAAIT,UAAWF,EAAQwL,KAAhC,8BAGE,OAAJ7I,QAAI,IAAJA,OAAA,EAAAA,EAAMkB,OACF,cAACnD,EAAA,EAAD,CAAQb,MAAM,UAAUmI,QAAS,kBAAMrF,EAAKtB,SAAQ,kBAAMwB,EAAQiB,KAAK,SAAvE,4BAEA,cAACpD,EAAA,EAAD,CAAQb,MAAM,UAAd,SAAwB,cAAC,IAAD,CAAMc,GAAG,oBAAoBT,UAAWF,EAAQwL,KAAhD,iCClC7B,SAAeK,GAAtB,qC,8CAAO,WAA4BC,EAAkBC,GAA9C,iBAAAzI,EAAA,6DACG0I,EAAO,CACTF,SAAUA,EACVC,WAAYA,GAHb,SAK8BE,MAAM,YAAa,CAChDC,OAAQ,OACRF,KAAMzB,KAAKC,UAAUwB,GACrBG,QAAS,CAAC,eAAgB,sBAR3B,8BASCC,OATD,cAKGC,EALH,yBAWIA,GAXJ,4C,sBCWP,IAAMC,GAAgBxK,YAAH,ghBA2BJ,SAASyK,KACpB,IAAMC,ECpCC,IAAIC,gBAAgBzH,cAAc0H,QDqCnC7J,EAAUC,cACV6J,EAASH,EAAMI,IAAI,UAHE,EAIR5K,mBAAiB2K,GAA7Bb,EAJoB,sBAKC9J,qBALD,mBAKpB6K,EALoB,KAKZC,EALY,OAMK9K,qBANL,mBAMpB+K,EANoB,KAMVC,EANU,OAOApD,uBAAa0C,IAPb,mBAOpBW,EAPoB,KAOTrK,EAPS,KAOTA,KAPS,EAQaZ,qBARb,mBAQpBkL,EARoB,KAQNC,EARM,OASCnL,qBATD,mBASpBoL,EAToB,KASZC,EATY,OAUSrL,oBAAkB,GAV3B,mBAUpBsL,EAVoB,KAURC,EAVQ,OAWKvL,oBAAkB,GAXvB,mBAWpBwL,EAXoB,KAWVC,EAXU,KA2D3B,OAtCA/G,qBAAU,WACHoF,GACCmB,EAAS,CAACxJ,UAAW,CAACkJ,OAAQb,GAAW4B,QAAQ,CAACC,YAAa,eAAgBC,eAAgB,iBAG/FhL,IACAe,QAAQC,IAAIhB,GACZoK,EAAYpK,EAAKiL,MAAMd,UACvBD,EAAUlK,EAAKiL,MAAMhB,SAEtBK,GACCO,GAAY,KAEjB,CAAC3B,EAAUlJ,EAAMqK,EAAUC,IAE9BxG,qBAAU,WAAM,4CACZ,WAAgCoF,EAAkBC,GAAlD,eAAAzI,EAAA,sEAW8BuI,GAAaC,EAAUC,GAXrD,OAWUM,EAXV,OAYI1I,QAAQC,IAAIyI,GACZc,EAAgBd,EAAYyB,YAC5BT,EAAUhB,EAAYe,QAd1B,4CADY,sBAiBRE,IAAeE,GAjBN,SAAD,6BAiBiBO,CAAgBjC,EAAD,OAAWiB,QAAX,IAAWA,OAAX,EAAWA,EAAUxI,MAElE,CAAC+I,EAAD,OAAaP,QAAb,IAAaA,OAAb,EAAaA,EAAUxI,GAAIuH,EAAU0B,IAKpC,cAACvN,EAAA,EAAD,CAAW+N,MAAO,CAACrF,QAAS,QAA5B,SACI,eAACxI,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASZ,WAAW,SAASoI,QAAQ,SAA/D,UACI,eAAC3H,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACyH,QAAQ,SAASxH,UAAU,SAASZ,WAAW,SAApE,UACI,eAACS,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACE,GAAI,EAAGD,UAAU,MAAMwH,QAAQ,eAAepI,WAAW,SAASsO,MAAO,CAACrF,QAAS,QAAxG,UACI,cAACP,GAAD,CAAgBzC,UAAWkH,IAC3B,cAACrM,EAAA,EAAD,CAAYC,QAAQ,KAApB,gBACA,cAAC2H,GAAD,CAAgBzC,UAAWoH,OAE/B,cAACrM,EAAA,EAAD,CAAQb,MAAM,UAAUY,QAAQ,YAAYsH,SAAUuF,GAAcE,EAAUxF,QAAS,WAlDnGuF,GAAc,IAkDF,2BAEJ,cAACpN,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACX,WAAW,SAASoI,QAAQ,SAAjD,SAEQoF,EAEI,eAAC/M,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,UAAU,SAASwH,QAAQ,SAASpI,WAAW,SAASsO,MAAO,CAACrF,QAAS,QAA9F,UACI,cAACnI,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B2M,EAAS,WAAa,YAChD,cAAC1M,EAAA,EAAD,CAAQD,QAAQ,YAAYZ,MAAM,UAAUmI,QA/DzD,WACXnF,EAAQoL,UA8D6ED,MAAO,CAACrF,QAAS,OAAQpJ,OAAQ,QAA9F,6DAKNuB,IAGV,cAACX,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASC,GAAI,EAAGuH,QAAQ,eAAerI,QAAS,EAA/E,gBAEQyN,QAFR,IAEQA,OAFR,EAEQA,EAAcrC,KAAI,SAACqD,GACf,OACI,cAAC/N,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASwH,QAAQ,SAAhD,SACI,cAACmD,EAAA,EAAD,UACI,eAAC9K,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,UAAU,SAASwH,QAAQ,SAASpI,WAAW,SAApE,UACI,eAACc,EAAA,EAAD,yBAAqB0N,EAAWC,YAAhC,QACA,eAAC3N,EAAA,EAAD,kBAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAQ1J,KAArB,YAAoC+K,EAAWrB,OAAOuB,YAAtD,0BACA,eAAC5N,EAAA,EAAD,kBAAauM,QAAb,IAAaA,OAAb,EAAaA,EAAU5J,KAAvB,SAAmC+K,EAAWG,MAAMC,WAApD,oBACA,eAAC9N,EAAA,EAAD,kBAAauM,QAAb,IAAaA,OAAb,EAAaA,EAAU5J,KAAvB,YAAsC+K,EAAWG,MAAMD,YAAvD,0BACA,eAAC5N,EAAA,EAAD,kBAAaqM,QAAb,IAAaA,OAAb,EAAaA,EAAQ1J,KAArB,SAAiC+K,EAAWrB,OAAOyB,WAAnD,0BAPZ,OAA8DpB,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAcqB,QAAQL,cExEpH,SAASM,GAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,SACf9L,EVjCD,WACL,IAD+B,EAKLX,mBAHjB0M,eAAeC,QAAQ,UAFD,mBAKxB9K,EALwB,KAKjB+K,EALiB,KA8B/B,MAAO,CACL/K,QACA1C,OAzBa,SAAC0C,EAAezC,GAE7B,GADAuC,QAAQC,IAAIC,GACTA,EAGD,OAAO5C,EAAeE,QAAO,WAC3BuN,eAAeG,QAAQ,QAAShL,GAChC+K,EAAS/K,GACTzC,QAkBJC,QAZc,SAACD,GAEf,OAAOH,EAAeI,SAAQ,WAC5BqN,eAAeI,WAAW,SAC1BF,EAAS,MACTxN,SUOS2N,GACb,OACE,cAACnO,EAAYoO,SAAb,CAAsB5L,MAAOT,EAA7B,SACG8L,IAKP,SAASQ,GAAT,GAAmD,IAA3BR,EAA0B,EAA1BA,SAAaS,EAAa,4BAC9CvM,EAAO5B,IAEX,OADA4C,QAAQC,IAAIjB,GAEV,cAAC,IAAD,2BACMuM,GADN,IAEEC,OAAQ,gBAAGpK,EAAH,EAAGA,SAAH,OACF,OAAJpC,QAAI,IAAJA,OAAA,EAAAA,EAAMkB,OACJ4K,EAEA,cAAC,IAAD,CACE9N,GAAI,CACFwE,SAAU,UACVD,MAAO,CAAED,KAAMF,UAWZqK,OArEf,WACE,IAAMC,EAA8C,IAAIC,eAAa,CACnEC,IAA0D,UAC1DC,MAAO,IAAIC,kBAGb,OACE,cAACxP,EAAA,EAAD,CAAWC,UAAU,SAArB,SACE,cAAC,iBAAD,CAAgBmP,OAAQA,EAAxB,SAEA,cAACb,GAAD,UACE,eAAC,IAAD,WACE,cAAC/C,GAAD,IACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC5P,EAAD,MAEtB,cAAC,IAAD,CAAO2P,OAAK,EAACC,KAAK,UAAlB,SAA4B,cAAC5N,EAAD,MAC5B,cAAC,IAAD,CAAO2N,OAAK,EAACC,KAAK,UAAlB,SAA4B,cAAC9K,EAAD,MAE5B,cAACoK,GAAD,CAAcU,KAAK,oBAAnB,SACE,cAAC1G,GAAD,MAEF,cAACgG,GAAD,CAAcU,KAAK,SAAnB,SACE,cAACpD,GAAD,mBC5BDqD,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.f1214e37.chunk.js","sourcesContent":["import { Button, Container, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    home: {\r\n      height: '100%'\r\n    },\r\n    innerHome: {\r\n      margin: 'auto',\r\n    },\r\n    displayGrid: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    startCombat:{\r\n      color: 'white',\r\n      textDecoration: 'none',\r\n    }\r\n  }));\r\n\r\nexport default function Home(){\r\n    const classes= useStyles();\r\n    \r\n    return(\r\n            <Container className=\"master\">\r\n              <Grid container className={classes.home}>\r\n                <Grid container item direction=\"column\" alignItems=\"center\" className={classes.innerHome}>\r\n                  <Grid container item direction=\"column\" xs={4} className={classes.displayGrid} spacing={3}>\r\n                    <Typography variant=\"h5\">Bienvenue dans Mon Petit RPG!</Typography>\r\n                    \r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                      <Link to=\"/character-select\" className={classes.startCombat}>\r\n                        Commencer le combat!\r\n                      </Link>\r\n                    </Button>\r\n                  </Grid>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n              \r\n                \r\n            </Container>\r\n        )\r\n    \r\n\r\n    \r\n}","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const authContext = createContext<AuthContext | undefined>(undefined);\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nconst authentication = {\r\n  isAuthenticated: false,\r\n  signin(cb: Function) {\r\n    authentication.isAuthenticated = true;\r\n    cb();\r\n  },\r\n  signout(cb: Function) {\r\n    authentication.isAuthenticated = false;\r\n    cb();\r\n  }\r\n};\r\n\r\n\r\n\r\nexport function useProvideAuth() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n  };\r\n\r\n  const [token, setToken] = useState<string | null>(getToken());\r\n\r\n  const signin = (token: string, cb: Function) => {\r\n    console.log(token)\r\n    if(token){\r\n      \r\n      \r\n      return authentication.signin(() => {\r\n        sessionStorage.setItem('token', token as string);\r\n        setToken(token);\r\n        cb();\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const signout = (cb: Function) => {\r\n    //sessionStorage.removeItem('token');\r\n    return authentication.signout(() => {\r\n      sessionStorage.removeItem('token')\r\n      setToken(null);\r\n      cb();\r\n    });\r\n  };\r\n\r\n  return {\r\n    token,\r\n    signin,\r\n    signout\r\n  };\r\n}\r\n\r\ntype AuthContext = {\r\n  token: string | null,\r\n    signin: Function,\r\n    signout: Function\r\n}\r\n\r\n/* export default function useToken() {\r\n  const getToken = () => {\r\n    return sessionStorage.getItem('token');\r\n    \r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = (userToken: string) => {\r\n    sessionStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n  };\r\n\r\n  const removeToken = () => {\r\n    sessionStorage.removeItem('token');\r\n    setToken(null)\r\n  }\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    removeToken: removeToken,\r\n    getToken: getToken,\r\n    token\r\n  }\r\n}\r\n\r\nexport interface tokenInterface {\r\n  setToken: any,\r\n    removeToken: any,\r\n    getToken: any,\r\n    token: any\r\n} */","import { useMutation } from '@apollo/client';\r\nimport { Container, CssBaseline, makeStyles, Typography, Grid, TextField, Button } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useState } from 'react';\r\nimport { ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n}));\r\n\r\nconst signupMutation = gql`\r\n    mutation signup($user: UserInput!) {\r\n        signup(user: $user){\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport default function SignUp(){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [firstname, setFirstname] = useState<string>();\r\n    const [lastname, setLastname] = useState<string>();\r\n    const [signup, {data}] = useMutation(signupMutation);\r\n    const auth = useAuth();\r\n\r\n    let history = useHistory();\r\n    let pwdConfirm = true;\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n        switch (event.target.name) {\r\n            case 'username':\r\n                setUsername(event.target.value);\r\n                break;\r\n             \r\n            case 'pwd': \r\n                setPwd(event.target.value);\r\n                break;\r\n            \r\n            case 'lastname': \r\n                setLastname(event.target.value);\r\n                break;\r\n\r\n            case 'firstname': \r\n                setFirstname(event.target.value);\r\n                break;\r\n            \r\n            case 'pwd-confirm':\r\n                pwdConfirm = (event.target.value && event.target.value === pwd) as boolean;\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        const user = {\r\n            username: username,\r\n            pwd: pwd,\r\n            firstname: firstname,\r\n            lastname: lastname\r\n        };\r\n        const userData = await signup({variables: {user: user}});\r\n        console.log(userData)\r\n        auth?.signin(userData.data.token);\r\n        history.push(\"/character-select\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">Créez votre compte</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Grid container direction=\"column\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Nom\"\r\n                            id=\"lastname\"\r\n                            name=\"lastname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            label=\"Prénom\"\r\n                            id=\"firstname\"\r\n                            name=\"firstname\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Confirmer le Mot de Passe\"\r\n                            id=\"pwd-confirm\"\r\n                            name=\"pwd-confirm\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            error={!pwdConfirm}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import { gql, useMutation } from '@apollo/client';\r\nimport { Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../services/AuthService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n\r\nconst loginMutation = gql`\r\n    mutation login($user: LoginInput!) {\r\n        login(user: $user)\r\n    }\r\n    \r\n`\r\nexport default function SignIn(/* props: {setToken: Function} */){\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState<string>();\r\n    const [pwd, setPwd] = useState<string>();\r\n    const [login, {data}] = useMutation(loginMutation);\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const auth = useAuth();\r\n\r\n    let { from }: any = location.state as any || { from: { pathname: \"/\" } };\r\n    console.log(from)\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => { \r\n           switch (event.target.name) {\r\n               case 'username':\r\n                    setUsername(event.target.value);\r\n                    break;\r\n                \r\n                case 'pwd': \r\n                    setPwd(event.target.value);\r\n           }\r\n     }\r\n\r\n    const handleSubmit = async (event: any) => {\r\n      event.preventDefault();\r\n      const loginData = await login({variables: {user: {username: username, pwd: pwd}}});\r\n      console.log(loginData.data.login);\r\n      \r\n      auth?.signin(loginData.data.login, () => {\r\n        history.replace(from);\r\n      });\r\n      \r\n        \r\n        \r\n      //props.setToken(loginData.data.login)\r\n    }\r\n    return(\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Connexion\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\">\r\n                        <TextField \r\n                            variant=\"outlined\"\r\n                            type=\"email\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            label=\"Adresse email\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        >\r\n                        </TextField>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            label=\"Mot de Passe\"\r\n                            id=\"pwd\"\r\n                            name=\"pwd\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                        ></TextField>\r\n                        <Button\r\n                            variant=\"contained\" \r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >Connexion\r\n                        </Button>\r\n                    </Grid>\r\n                    \r\n                </form>\r\n                <Typography variant=\"subtitle1\">\r\n                    Pas encore de compte? <Link to=\"/signup\">Créez en un ici!</Link>\r\n                </Typography>\r\n            </div>\r\n            \r\n        </Container>\r\n    )\r\n}","import { useMutation } from \"@apollo/client\";\r\nimport { Button, CssBaseline, Dialog, DialogActions, DialogContent, DialogTitle, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { AddCircle, RemoveCircle } from \"@material-ui/icons\";\r\nimport gql from \"graphql-tag\";\r\nimport React, { useState, useEffect, ChangeEvent } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n}));\r\n\r\nconst editCharacterMutation = gql`\r\n    mutation editCharacter($char: CharacterInput!) {\r\n        editCharacter(character: $char){\r\n            id\r\n            name\r\n            rank\r\n            skillpoints\r\n            health\r\n            attack\r\n            defense\r\n            magik\r\n            userId\r\n        }\r\n    }\r\n        \r\n`\r\n\r\nexport default function CharacterEditor(props: any){\r\n    const [open, setOpen] = useState(props.open);\r\n    const [character] = useState(props.character ?? {name: '', skillpoints: 12, health:10, attack: 0, defense: 0, magik: 0, rank: 1});\r\n    const [editCharacter, {data}] = useMutation(editCharacterMutation);\r\n    const [name, setName] = useState<string>();\r\n    const [skillpoints, setSkillpoints] = useState(character.skillpoints);\r\n\r\n    const [health, setHealth] = useState(character.health);\r\n    const [attack, setAttack] = useState(character.attack);\r\n    const [defense, setDefense] = useState(character.defense);\r\n    const [magik, setMagik] = useState(character.magik);\r\n\r\n    const classes = useStyles();\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        //props.onClose();\r\n      };\r\n    \r\n    useEffect(() => {\r\n        if(props.open) setOpen(props.open);\r\n        \r\n    }, [props]);\r\n\r\n    const getAttrValue = (attr: string) => {\r\n        switch(attr){\r\n            case 'health':\r\n                return {value: health, handler: setHealth};\r\n            case 'attack': \r\n                return {value: attack, handler: setAttack};\r\n            \r\n            case 'defense':\r\n                return {value: defense, handler: setDefense};\r\n\r\n            case 'magik': \r\n                return {value: magik, handler: setMagik};\r\n\r\n            default:\r\n                return {value: 0, handler: () => {console.error('Attribute not found')}};\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        const char = {\r\n            id: character.id??undefined,\r\n            name: name,\r\n            health: health,\r\n            attack: attack,\r\n            defense: defense,\r\n            magik: magik,\r\n            skillpoints: skillpoints,\r\n            rank: character.rank,\r\n            userId: props.userId\r\n        }\r\n        console.log(char)\r\n        editCharacter({variables: {char: char}});\r\n        props.action(true);\r\n        setOpen(false);\r\n        \r\n    }\r\n\r\n    const handleAddPoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName)\r\n        let cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n        if (skillpoints > 0) {\r\n            if(cost === 0) cost = 1;\r\n            if (skillpoints >= cost){\r\n                attribute.handler(attribute?.value + 1);\r\n            }\r\n               \r\n            setSkillpoints((skillpoints - cost) < 0 ? 0 : skillpoints - cost)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleRemovePoint = (attributeName: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        let refund: number = attributeName === 'health' ? 1 : Math.ceil(attribute?.value / 5);;\r\n        if (skillpoints < (health + attack + defense + magik + skillpoints)){\r\n                if(refund === 0) refund = 1;\r\n\r\n                if(attribute.value - 1 >= 0 || attribute.value - 1 >= character[attributeName]){\r\n                    attribute.handler(attribute.value - 1);\r\n                }\r\n            setSkillpoints(skillpoints + refund);\r\n        }\r\n    }\r\n\r\n    const handleDisabled = (attributeName: string, action: string) => {\r\n        const attribute = getAttrValue(attributeName);\r\n        if (action === 'add'){\r\n            \r\n            const cost = attributeName === 'health'? 1 : Math.ceil(attribute?.value / 5);\r\n            if (skillpoints < cost){\r\n                return true\r\n            }\r\n        } else {\r\n            if(character && character[attributeName] === attribute.value){\r\n                return true;\r\n            }\r\n        }\r\n      \r\n    }\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <CssBaseline/>\r\n            <DialogTitle>{props.character? 'Editer' : 'Créer'} un Personnage</DialogTitle>\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" justify=\"center\">\r\n                        <TextField\r\n                            name=\"name\"\r\n                            label=\"Nom\"\r\n                            id=\"name\"\r\n                            required\r\n                            margin=\"normal\"\r\n                            value={character?.name}\r\n                            onChange={handleChange}\r\n                            disabled={character?.name ? true :false}\r\n                        />\r\n                        <TextField\r\n                            name=\"skillpoints\"\r\n                            label=\"Points de compétence\"\r\n                            id=\"skillpoints\"\r\n                            disabled\r\n                            value={skillpoints}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('health')} disabled={handleDisabled('health', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"health\"\r\n                                label=\"Endurance\"\r\n                                id=\"health\"\r\n                                disabled\r\n                                value={health}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('health')} disabled={handleDisabled('health', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('attack')} disabled={handleDisabled('attack', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"attack\"\r\n                                label=\"Attaque\"\r\n                                id=\"attack\"\r\n                                disabled\r\n                                value={attack}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('attack')} disabled={handleDisabled('attack', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('defense')} disabled={handleDisabled('defense', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"defense\"\r\n                                label=\"Defense\"\r\n                                id=\"defense\"\r\n                                disabled\r\n                                value={defense}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('defense')} disabled={handleDisabled('defense', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        <Grid container item direction=\"row\" justify=\"center\">\r\n                            <Button color=\"primary\" onClick={() => handleRemovePoint('magik')} disabled={handleDisabled('magik', 'remove')}><RemoveCircle/></Button>\r\n                            <TextField\r\n                                name=\"magik\"\r\n                                label=\"Magie\"\r\n                                id=\"magik\"\r\n                                disabled\r\n                                value={magik}\r\n                                margin=\"normal\"\r\n                            />\r\n                            <Button color=\"primary\" onClick={() => handleAddPoint('magik')} disabled={handleDisabled('magik', 'add')}><AddCircle/></Button>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Annuler\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Valider\r\n                    </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport default function CharacterSheet(props: any){\r\n    \r\n    if(!props.character){\r\n        return (\r\n            <></>\r\n        )\r\n    } else {\r\n        return(\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container justify=\"center\" alignContent=\"center\" alignItems=\"center\" direction=\"column\">\r\n                        <Typography variant=\"h5\">{props.character?.name}</Typography>\r\n                        <Typography variant=\"h6\">Niveau: {props.character?.rank}</Typography>\r\n                        <Typography variant=\"h6\">Endurance: {props.character?.health}</Typography>\r\n                        <Typography variant=\"h6\">Attaque: {props.character?.attack}</Typography>\r\n                        <Typography variant=\"h6\">Défense: {props.character?.defense}</Typography>\r\n                        <Typography variant=\"h6\">Magik: {props.character?.magik}</Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n    \r\n}","import { gql, useLazyQuery } from '@apollo/client';\r\nimport { Button, Grid, makeStyles, Paper } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useJwt } from 'react-jwt';\r\nimport Character from '../models/Character.model';\r\nimport { useAuth } from '../services/AuthService';\r\nimport CharacterEditor from './CharacterEditor';\r\nimport CharacterSheet from './CharacterSheet';\r\nimport { Link } from 'react-router-dom';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    create: {\r\n        color: 'white',\r\n        textDecoration: 'none'\r\n    },\r\n    empty: {\r\n        height: '100%'\r\n    },\r\n    chargrid: {\r\n        padding: '1rem'\r\n    },\r\n    charLabel: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        '&:hover': {cursor: 'pointer'}\r\n    },\r\n    disabled: {\r\n        padding: '1rem',\r\n        textAlign: 'center',\r\n        backgroundColor: 'lightslategrey',\r\n        '&:hover': {cursor: 'not-allowed'}\r\n    },\r\n}));\r\n\r\nconst characterListQuery = gql`\r\n    query characters($userId: String){\r\n        characters(userId: $userId) {\r\n            name\r\n            rank\r\n            skillpoints\r\n            attack\r\n            health\r\n            defense\r\n            magik\r\n            id\r\n            lastFight\r\n        }\r\n    }\r\n`\r\n\r\nexport default function CharacterSelect(props: any){\r\n    const classes = useStyles();\r\n    const [charList, setCharList] = useState<Character[]>();\r\n    const [character, setCharacter] = useState<Character>();\r\n    const [userId, setUserId] = useState<string>();\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [openEditor, setOpenEditor] = useState(false);\r\n    let auth = useAuth();\r\n    const {decodedToken} = useJwt(auth?.token as string)\r\n\r\n    const [getChars, { loading, data }] = useLazyQuery(characterListQuery);\r\n\r\n    const isAvailable = (char: Character) => {\r\n        const now = DateTime.now();\r\n        const lastFight = DateTime.fromMillis(parseInt(char?.lastFight as string));\r\n        console.log(now.diff(lastFight, 'hours'))\r\n            if (now.diff(lastFight, 'hours').hours > 1) {\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(decodedToken?.id || refresh) {\r\n            setUserId(decodedToken.id)\r\n            getChars({variables: {userId: decodedToken.id}})\r\n        }\r\n        if(data){\r\n            console.log(`Character list:: ${JSON.stringify(data)}`)\r\n            setCharList(data.characters);\r\n        }\r\n\r\n        \r\n    }, [decodedToken, data, getChars, refresh]);\r\n\r\n    if(loading) return (<div>loading</div>);\r\n    const creationOK = charList?.length as number < 10;\r\n\r\n    const handleSelect = (id: string) => {\r\n        const char: Character = charList?.find((c) => c.id === id) as Character;\r\n        \r\n        if(char && isAvailable(char)){\r\n            setCharacter(char);            \r\n        }\r\n    }\r\n\r\n    if(!charList || charList?.length <= 0) return (\r\n        <Grid container direction=\"row\" justify=\"center\" className={classes.empty}>\r\n            <CreateCharacterButton userId={userId} action={setRefresh}/>\r\n        </Grid>\r\n        \r\n    )\r\n    else return(\r\n        <Grid container direction=\"row\">\r\n            <Grid container item xs={6} direction=\"column\">\r\n                {\r\n                    charList?.map((c: Character) => {return (\r\n                        <Grid key={c.id} onClick={() => handleSelect(c.id)} className={classes.chargrid}>\r\n                            <Paper className={isAvailable(c) ? classes.charLabel : classes.disabled}>\r\n                                \r\n                                <Grid container item direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n                                    {c.name} Niveau {c.rank}\r\n                                    {\r\n                                        c.skillpoints > 0?\r\n                                            <>\r\n                                                <Button onClick={()=> setOpenEditor(true)} color=\"primary\" variant=\"outlined\">Monter de niveau</Button>\r\n                                                <CharacterEditor open={openEditor} userId={userId} action={setRefresh} character={c}/>\r\n\r\n                                            </>\r\n                                        : undefined\r\n                                    }\r\n                                </Grid>\r\n                                \r\n                            </Paper>\r\n                        </Grid>\r\n                        \r\n                    )})\r\n                }\r\n                {creationOK?<CreateCharacterButton userId={userId} action={setRefresh}/>: undefined}\r\n            </Grid>\r\n            <Grid container item xs={6} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                {character ? (\r\n                    <>\r\n                        <Grid item container justify=\"center\" alignItems=\"center\" direction=\"column\" md={4} className={classes.chargrid}>\r\n                            <CharacterSheet character={character}/>\r\n                        </Grid> \r\n                        <div>\r\n                            <Button color=\"primary\" variant=\"contained\" >\r\n                                <Link to={`/arena?charId=${character.id}`} className={classes.create}>Entrer dans l'arène</Link>\r\n                            </Button> \r\n                        </div>\r\n                        \r\n                    </>\r\n                ) : undefined}\r\n            </Grid>\r\n        </Grid>\r\n            \r\n    )\r\n}\r\n\r\nfunction CreateCharacterButton(props: any) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.create} onClick={handleClick}>Nouveau Personnage</Button>\r\n            <CharacterEditor open={open} userId={props.userId} action={props.action}/>\r\n        </>\r\n    )\r\n}","import { AppBar, Toolbar, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../services/AuthService\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    }\r\n  }));\r\nexport default function Navigation(){\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const auth = useAuth();\r\n    return (\r\n    <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n          <Link to=\"/\" className={classes.link}>Mon petit RPG</Link>\r\n      </Typography>\r\n      {\r\n        auth?.token?\r\n            <Button color=\"inherit\" onClick={() => auth.signout(() => history.push(\"/\"))}>Me deconnecter</Button>\r\n            : \r\n            <Button color=\"inherit\"><Link to=\"/character-select\" className={classes.link}>Me connecter</Link></Button>}\r\n    </Toolbar>\r\n  </AppBar>\r\n  )\r\n}","export async function executeFight(playerId: string, opponentId: string) {\r\n    const body = {\r\n        playerId: playerId,\r\n        opponentId: opponentId\r\n    }\r\n    const fightResult = await (await fetch('api/fight', {\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {'Content-Type': 'application/json'}\r\n    })).json();\r\n\r\n    return fightResult\r\n}","import { useLazyQuery } from '@apollo/client';\r\nimport { Button, Container, Grid, Typography, Paper } from '@material-ui/core';\r\nimport gql from 'graphql-tag';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Character from '../models/Character.model';\r\nimport ReportLine from '../models/ReportLine.model';\r\nimport { executeFight } from '../services/ApiService';\r\nimport { useUrlQuery } from '../services/Utils';\r\nimport CharacterSheet from './CharacterSheet';\r\n\r\nconst getFightQuery = gql`\r\n    query fight($charId: String!){\r\n        fight(charId: $charId){\r\n            player{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            },\r\n            opponent{\r\n                id,\r\n                name,\r\n                health, \r\n                attack,\r\n                defense, \r\n                magik,\r\n                rank\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default function Arena(){\r\n    const query = useUrlQuery();\r\n    const history = useHistory();\r\n    const charId = query.get('charId');\r\n    const [playerId] = useState<string>(charId as string);\r\n    const [player, setPlayer] = useState<Character>();\r\n    const [opponent, setOpponent] = useState<Character>();\r\n    const [getFight, {data}] = useLazyQuery(getFightQuery);\r\n    const [combatReport, setCombatReport] = useState<any[]>();\r\n    const [winner, setWinner] = useState<boolean>();\r\n    const [startFight, setStartFight] = useState<boolean>(false)\r\n    const [endFight, setEndFight] = useState<boolean>(false)\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const launchFight = () => {\r\n        setStartFight(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(playerId) {\r\n            getFight({variables: {charId: playerId}, context:{fetchPolicy: 'network-only', newFecthPolicy: 'cache-first'}});\r\n        }\r\n\r\n        if (data) {\r\n            console.log(data)\r\n            setOpponent(data.fight.opponent);\r\n            setPlayer(data.fight.player);\r\n        }\r\n        if(combatReport){\r\n            setEndFight(true)\r\n        }\r\n    }, [playerId, data, getFight, combatReport]);\r\n\r\n    useEffect(() => {\r\n        async function getCombatReport (playerId: string, opponentId: string) {\r\n            /* const body = {\r\n                playerId: playerId,\r\n                opponentId: opponentId\r\n            }\r\n            const request = await fetch('api/fight', {\r\n                method: 'POST',\r\n                body: JSON.stringify(body),\r\n                headers: {'Content-Type': 'application/json'}\r\n            }); */\r\n    \r\n            const fightResult = await executeFight(playerId, opponentId);\r\n            console.log(fightResult)\r\n            setCombatReport(fightResult.reportList);\r\n            setWinner(fightResult.winner);\r\n        } \r\n        if (startFight && !endFight) getCombatReport(playerId, opponent?.id as string);\r\n        \r\n    }, [startFight, opponent?.id, playerId, endFight])\r\n    \r\n    \r\n    \r\n    return(\r\n        <Container style={{padding: '1rem'}}>\r\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                <Grid container item justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n                    <Grid container item xs={6} direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                        <CharacterSheet character={player}/>\r\n                        <Typography variant=\"h4\">VS</Typography>\r\n                        <CharacterSheet character={opponent}/>\r\n                    </Grid>\r\n                    <Button color=\"primary\" variant=\"contained\" disabled={startFight || endFight} onClick={() => launchFight()}>Attaquer !</Button>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" justify=\"center\">\r\n                    {\r\n                        combatReport? \r\n                           \r\n                            <Grid container item direction=\"column\" justify=\"center\" alignItems=\"center\" style={{padding: '1rem'}}>\r\n                                <Typography variant=\"h5\">{winner ? 'VICTOIRE' : 'DEFAITE'}</Typography>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={goBack} style={{padding: '1rem', margin: 'auto'}}>Revenir à la selection de personnage</Button>\r\n                            </Grid>\r\n                                \r\n                                    \r\n                            \r\n                        : undefined\r\n                    }\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={6} justify=\"space-evenly\" spacing={1}>\r\n                    {\r\n                        combatReport?.map((reportLine: ReportLine) => {\r\n                            return (\r\n                                <Grid item container direction=\"column\" justify=\"center\" key={combatReport?.indexOf(reportLine)}>\r\n                                    <Paper>\r\n                                        <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                            <Typography>Tour n° {reportLine.roundNumber} :</Typography>\r\n                                            <Typography>{player?.name} inflige {reportLine.player.attackValue} points de dégats</Typography>\r\n                                            <Typography>{opponent?.name} perd {reportLine.enemy.healthLost} points de vie</Typography>\r\n                                            <Typography>{opponent?.name} inflige {reportLine.enemy.attackValue} points de dégats</Typography>\r\n                                            <Typography>{player?.name} perd {reportLine.player.healthLost} points de vie</Typography>\r\n                                        </Grid>\r\n                                    </Paper>\r\n                                    \r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { useLocation } from \"react-router-dom\";\r\n\r\nexport function useUrlQuery() {\r\n    return new URLSearchParams(useLocation().search);  \r\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\r\nimport { ApolloProvider } from '@apollo/client/react';\r\nimport React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport SignUp from './components/Signup';\r\nimport { Container } from '@material-ui/core';\r\nimport  { authContext, useAuth, useProvideAuth } from './services/AuthService';\r\nimport SignIn from './components/Signin';\r\nimport CharacterSelect from './components/CharacterSelect';\r\nimport Navigation from './components/Navigation';\r\nimport Arena from './components/Arena';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n    uri: /* 'https://idle-rpg-tribe.herokuapp.com/graphql', */'graphql',\r\n    cache: new InMemoryCache()\r\n  });\r\n  \r\n  return (\r\n    <Container className=\"master\">\r\n      <ApolloProvider client={client}>\r\n      \r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <Navigation/>\r\n            <Switch>\r\n\r\n              <Route exact path=\"/\"><Home/></Route>\r\n              \r\n              <Route exact path=\"/signup\"><SignUp/></Route>\r\n              <Route exact path=\"/signin\"><SignIn/></Route>\r\n\r\n              <PrivateRoute path=\"/character-select\">\r\n                <CharacterSelect/>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/arena\">\r\n                <Arena/>\r\n              </PrivateRoute>\r\n            </Switch>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n        \r\n        \r\n      </ApolloProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction ProvideAuth({ children }:any) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: any) {\r\nlet auth = useAuth();\r\nconsole.log(auth)\r\nreturn (\r\n  <Route\r\n    {...rest}\r\n    render={({ location }) =>\r\n      auth?.token ? (\r\n        children\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/signin\",\r\n            state: { from: location }\r\n          }}\r\n\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}